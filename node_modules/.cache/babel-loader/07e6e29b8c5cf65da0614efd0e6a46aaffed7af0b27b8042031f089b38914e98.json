{"ast":null,"code":"\"use client\";\n\nimport { useAccordionItem } from \"./chunk-GF4EBHRC.mjs\";\n\n// src/accordion-item.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useMemo } from \"react\";\nimport { ChevronIcon } from \"@nextui-org/shared-icons\";\nimport { AnimatePresence, LazyMotion, domAnimation, m, useWillChange } from \"framer-motion\";\nimport { TRANSITION_VARIANTS } from \"@nextui-org/framer-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar AccordionItem = forwardRef((props, ref) => {\n  const {\n    Component,\n    HeadingComponent,\n    classNames,\n    slots,\n    indicator,\n    children,\n    title,\n    subtitle,\n    startContent,\n    isOpen,\n    isDisabled,\n    hideIndicator,\n    keepContentMounted,\n    disableAnimation,\n    motionProps,\n    getBaseProps,\n    getHeadingProps,\n    getButtonProps,\n    getTitleProps,\n    getSubtitleProps,\n    getContentProps,\n    getIndicatorProps\n  } = useAccordionItem({\n    ...props,\n    ref\n  });\n  const willChange = useWillChange();\n  const indicatorContent = useMemo(() => {\n    if (typeof indicator === \"function\") {\n      return indicator({\n        indicator: /* @__PURE__ */jsx(ChevronIcon, {}),\n        isOpen,\n        isDisabled\n      });\n    }\n    if (indicator) return indicator;\n    return null;\n  }, [indicator, isOpen, isDisabled]);\n  const indicatorComponent = indicatorContent || /* @__PURE__ */jsx(ChevronIcon, {});\n  const content = useMemo(() => {\n    if (disableAnimation) {\n      return /* @__PURE__ */jsx(\"div\", {\n        ...getContentProps(),\n        children\n      });\n    }\n    return keepContentMounted ? /* @__PURE__ */jsx(LazyMotion, {\n      features: domAnimation,\n      children: /* @__PURE__ */jsx(m.section, {\n        animate: isOpen ? \"enter\" : \"exit\",\n        exit: \"exit\",\n        initial: \"exit\",\n        style: {\n          overflowY: \"hidden\",\n          willChange\n        },\n        variants: TRANSITION_VARIANTS.collapse,\n        ...motionProps,\n        children: /* @__PURE__ */jsx(\"div\", {\n          ...getContentProps(),\n          children\n        })\n      }, \"accordion-content\")\n    }) : /* @__PURE__ */jsx(AnimatePresence, {\n      initial: false,\n      children: isOpen && /* @__PURE__ */jsx(LazyMotion, {\n        features: domAnimation,\n        children: /* @__PURE__ */jsx(m.section, {\n          animate: \"enter\",\n          exit: \"exit\",\n          initial: \"exit\",\n          style: {\n            overflowY: \"hidden\",\n            willChange\n          },\n          variants: TRANSITION_VARIANTS.collapse,\n          ...motionProps,\n          children: /* @__PURE__ */jsx(\"div\", {\n            ...getContentProps(),\n            children\n          })\n        }, \"accordion-content\")\n      })\n    });\n  }, [isOpen, disableAnimation, keepContentMounted, children, motionProps]);\n  return /* @__PURE__ */jsxs(Component, {\n    ...getBaseProps(),\n    children: [/* @__PURE__ */jsx(HeadingComponent, {\n      ...getHeadingProps(),\n      children: /* @__PURE__ */jsxs(\"button\", {\n        ...getButtonProps(),\n        children: [startContent && /* @__PURE__ */jsx(\"div\", {\n          className: slots.startContent({\n            class: classNames == null ? void 0 : classNames.startContent\n          }),\n          children: startContent\n        }), /* @__PURE__ */jsxs(\"div\", {\n          className: slots.titleWrapper({\n            class: classNames == null ? void 0 : classNames.titleWrapper\n          }),\n          children: [title && /* @__PURE__ */jsx(\"span\", {\n            ...getTitleProps(),\n            children: title\n          }), subtitle && /* @__PURE__ */jsx(\"span\", {\n            ...getSubtitleProps(),\n            children: subtitle\n          })]\n        }), !hideIndicator && indicatorComponent && /* @__PURE__ */jsx(\"span\", {\n          ...getIndicatorProps(),\n          children: indicatorComponent\n        })]\n      })\n    }), content]\n  });\n});\nAccordionItem.displayName = \"NextUI.AccordionItem\";\nvar accordion_item_default = AccordionItem;\nexport { accordion_item_default };","map":{"version":3,"names":["useAccordionItem","forwardRef","useMemo","ChevronIcon","AnimatePresence","LazyMotion","domAnimation","m","useWillChange","TRANSITION_VARIANTS","jsx","jsxs","AccordionItem","props","ref","Component","HeadingComponent","classNames","slots","indicator","children","title","subtitle","startContent","isOpen","isDisabled","hideIndicator","keepContentMounted","disableAnimation","motionProps","getBaseProps","getHeadingProps","getButtonProps","getTitleProps","getSubtitleProps","getContentProps","getIndicatorProps","willChange","indicatorContent","indicatorComponent","content","features","section","animate","exit","initial","style","overflowY","variants","collapse","className","class","titleWrapper","displayName","accordion_item_default"],"sources":["/Users/mario/Documents/Development/portfolio/node_modules/@nextui-org/accordion/dist/chunk-D67WDUMQ.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useAccordionItem\n} from \"./chunk-GF4EBHRC.mjs\";\n\n// src/accordion-item.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useMemo } from \"react\";\nimport { ChevronIcon } from \"@nextui-org/shared-icons\";\nimport { AnimatePresence, LazyMotion, domAnimation, m, useWillChange } from \"framer-motion\";\nimport { TRANSITION_VARIANTS } from \"@nextui-org/framer-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar AccordionItem = forwardRef((props, ref) => {\n  const {\n    Component,\n    HeadingComponent,\n    classNames,\n    slots,\n    indicator,\n    children,\n    title,\n    subtitle,\n    startContent,\n    isOpen,\n    isDisabled,\n    hideIndicator,\n    keepContentMounted,\n    disableAnimation,\n    motionProps,\n    getBaseProps,\n    getHeadingProps,\n    getButtonProps,\n    getTitleProps,\n    getSubtitleProps,\n    getContentProps,\n    getIndicatorProps\n  } = useAccordionItem({ ...props, ref });\n  const willChange = useWillChange();\n  const indicatorContent = useMemo(() => {\n    if (typeof indicator === \"function\") {\n      return indicator({ indicator: /* @__PURE__ */ jsx(ChevronIcon, {}), isOpen, isDisabled });\n    }\n    if (indicator)\n      return indicator;\n    return null;\n  }, [indicator, isOpen, isDisabled]);\n  const indicatorComponent = indicatorContent || /* @__PURE__ */ jsx(ChevronIcon, {});\n  const content = useMemo(() => {\n    if (disableAnimation) {\n      return /* @__PURE__ */ jsx(\"div\", { ...getContentProps(), children });\n    }\n    return keepContentMounted ? /* @__PURE__ */ jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsx(\n      m.section,\n      {\n        animate: isOpen ? \"enter\" : \"exit\",\n        exit: \"exit\",\n        initial: \"exit\",\n        style: { overflowY: \"hidden\", willChange },\n        variants: TRANSITION_VARIANTS.collapse,\n        ...motionProps,\n        children: /* @__PURE__ */ jsx(\"div\", { ...getContentProps(), children })\n      },\n      \"accordion-content\"\n    ) }) : /* @__PURE__ */ jsx(AnimatePresence, { initial: false, children: isOpen && /* @__PURE__ */ jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsx(\n      m.section,\n      {\n        animate: \"enter\",\n        exit: \"exit\",\n        initial: \"exit\",\n        style: { overflowY: \"hidden\", willChange },\n        variants: TRANSITION_VARIANTS.collapse,\n        ...motionProps,\n        children: /* @__PURE__ */ jsx(\"div\", { ...getContentProps(), children })\n      },\n      \"accordion-content\"\n    ) }) });\n  }, [isOpen, disableAnimation, keepContentMounted, children, motionProps]);\n  return /* @__PURE__ */ jsxs(Component, { ...getBaseProps(), children: [\n    /* @__PURE__ */ jsx(HeadingComponent, { ...getHeadingProps(), children: /* @__PURE__ */ jsxs(\"button\", { ...getButtonProps(), children: [\n      startContent && /* @__PURE__ */ jsx(\"div\", { className: slots.startContent({ class: classNames == null ? void 0 : classNames.startContent }), children: startContent }),\n      /* @__PURE__ */ jsxs(\"div\", { className: slots.titleWrapper({ class: classNames == null ? void 0 : classNames.titleWrapper }), children: [\n        title && /* @__PURE__ */ jsx(\"span\", { ...getTitleProps(), children: title }),\n        subtitle && /* @__PURE__ */ jsx(\"span\", { ...getSubtitleProps(), children: subtitle })\n      ] }),\n      !hideIndicator && indicatorComponent && /* @__PURE__ */ jsx(\"span\", { ...getIndicatorProps(), children: indicatorComponent })\n    ] }) }),\n    content\n  ] });\n});\nAccordionItem.displayName = \"NextUI.AccordionItem\";\nvar accordion_item_default = AccordionItem;\n\nexport {\n  accordion_item_default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}