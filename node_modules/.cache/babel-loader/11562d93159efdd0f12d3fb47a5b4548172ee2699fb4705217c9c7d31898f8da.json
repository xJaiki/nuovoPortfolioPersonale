{"ast":null,"code":"\"use client\";\n\n// src/use-menu-item.ts\nimport { useMemo, useRef, useCallback } from \"react\";\nimport { menuItem } from \"@nextui-org/theme\";\nimport { mapPropsVariants, useProviderContext } from \"@nextui-org/system\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { clsx, dataAttr, objectToDeps, removeEvents } from \"@nextui-org/shared-utils\";\nimport { useAriaMenuItem } from \"@nextui-org/use-aria-menu\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useIsMobile } from \"@nextui-org/use-is-mobile\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nfunction useMenuItem(originalProps) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, menuItem.variantKeys);\n  const {\n    as,\n    item,\n    state,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    isVirtualized,\n    selectedIcon,\n    className,\n    classNames,\n    onAction,\n    autoFocus,\n    onClick,\n    onPress,\n    onPressStart,\n    onPressUp,\n    onPressEnd,\n    onPressChange,\n    hideSelectedIcon = false,\n    isReadOnly = false,\n    closeOnSelect,\n    onClose,\n    ...otherProps\n  } = props;\n  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const domRef = useRef(null);\n  const Component = as || ((otherProps == null ? void 0 : otherProps.href) ? \"a\" : \"li\");\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const {\n    rendered,\n    key\n  } = item;\n  const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;\n  const isSelectable = state.selectionManager.selectionMode !== \"none\";\n  const isMobile = useIsMobile();\n  const {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing({\n    autoFocus\n  });\n  const {\n    isHovered,\n    isPressed,\n    isFocused,\n    isSelected,\n    menuItemProps,\n    labelProps,\n    descriptionProps,\n    keyboardShortcutProps\n  } = useAriaMenuItem({\n    key,\n    onClose,\n    isDisabled,\n    onPress,\n    onClick,\n    onPressStart,\n    onPressUp,\n    onPressEnd,\n    onPressChange,\n    \"aria-label\": props[\"aria-label\"],\n    closeOnSelect,\n    isVirtualized,\n    onAction\n  }, state, domRef);\n  let itemProps = menuItemProps;\n  const slots = useMemo(() => menuItem({\n    ...variantProps,\n    isDisabled,\n    disableAnimation\n  }), [objectToDeps(variantProps), isDisabled, disableAnimation]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  if (isReadOnly) {\n    itemProps = removeEvents(itemProps);\n  }\n  const getItemProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(isReadOnly ? {} : focusProps, filterDOMProps(otherProps, {\n      enabled: shouldFilterDOMProps\n    }), itemProps, props2),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-selectable\": dataAttr(isSelectable),\n    \"data-hover\": dataAttr(isMobile ? isHovered || isPressed : isHovered),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-selected\": dataAttr(isSelected),\n    \"data-pressed\": dataAttr(isPressed),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    className: slots.base({\n      class: clsx(baseStyles, props2.className)\n    })\n  });\n  const getLabelProps = (props2 = {}) => ({\n    ...mergeProps(labelProps, props2),\n    className: slots.title({\n      class: classNames == null ? void 0 : classNames.title\n    })\n  });\n  const getDescriptionProps = (props2 = {}) => ({\n    ...mergeProps(descriptionProps, props2),\n    className: slots.description({\n      class: classNames == null ? void 0 : classNames.description\n    })\n  });\n  const getKeyboardShortcutProps = (props2 = {}) => ({\n    ...mergeProps(keyboardShortcutProps, props2),\n    className: slots.shortcut({\n      class: classNames == null ? void 0 : classNames.shortcut\n    })\n  });\n  const getSelectedIconProps = useCallback((props2 = {}) => {\n    return {\n      \"aria-hidden\": dataAttr(true),\n      \"data-disabled\": dataAttr(isDisabled),\n      className: slots.selectedIcon({\n        class: classNames == null ? void 0 : classNames.selectedIcon\n      }),\n      ...props2\n    };\n  }, [isDisabled, slots, classNames]);\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    isSelectable,\n    isSelected,\n    isDisabled,\n    rendered,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    selectedIcon,\n    disableAnimation,\n    getItemProps,\n    getLabelProps,\n    hideSelectedIcon,\n    getDescriptionProps,\n    getKeyboardShortcutProps,\n    getSelectedIconProps\n  };\n}\nexport { useMenuItem };","map":{"version":3,"names":["useMemo","useRef","useCallback","menuItem","mapPropsVariants","useProviderContext","useFocusRing","clsx","dataAttr","objectToDeps","removeEvents","useAriaMenuItem","mergeProps","useIsMobile","filterDOMProps","useMenuItem","originalProps","_a","_b","globalContext","props","variantProps","variantKeys","as","item","state","shortcut","description","startContent","endContent","isVirtualized","selectedIcon","className","classNames","onAction","autoFocus","onClick","onPress","onPressStart","onPressUp","onPressEnd","onPressChange","hideSelectedIcon","isReadOnly","closeOnSelect","onClose","otherProps","disableAnimation","domRef","Component","href","shouldFilterDOMProps","rendered","key","isDisabled","disabledKeys","has","isSelectable","selectionManager","selectionMode","isMobile","isFocusVisible","focusProps","isHovered","isPressed","isFocused","isSelected","menuItemProps","labelProps","descriptionProps","keyboardShortcutProps","itemProps","slots","baseStyles","base","getItemProps","props2","ref","enabled","class","getLabelProps","title","getDescriptionProps","getKeyboardShortcutProps","getSelectedIconProps"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@nextui-org/menu/dist/chunk-BQCSFB47.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-menu-item.ts\nimport { useMemo, useRef, useCallback } from \"react\";\nimport { menuItem } from \"@nextui-org/theme\";\nimport {\n  mapPropsVariants,\n  useProviderContext\n} from \"@nextui-org/system\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { clsx, dataAttr, objectToDeps, removeEvents } from \"@nextui-org/shared-utils\";\nimport { useAriaMenuItem } from \"@nextui-org/use-aria-menu\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useIsMobile } from \"@nextui-org/use-is-mobile\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nfunction useMenuItem(originalProps) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, menuItem.variantKeys);\n  const {\n    as,\n    item,\n    state,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    isVirtualized,\n    selectedIcon,\n    className,\n    classNames,\n    onAction,\n    autoFocus,\n    onClick,\n    onPress,\n    onPressStart,\n    onPressUp,\n    onPressEnd,\n    onPressChange,\n    hideSelectedIcon = false,\n    isReadOnly = false,\n    closeOnSelect,\n    onClose,\n    ...otherProps\n  } = props;\n  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const domRef = useRef(null);\n  const Component = as || ((otherProps == null ? void 0 : otherProps.href) ? \"a\" : \"li\");\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const { rendered, key } = item;\n  const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;\n  const isSelectable = state.selectionManager.selectionMode !== \"none\";\n  const isMobile = useIsMobile();\n  const { isFocusVisible, focusProps } = useFocusRing({\n    autoFocus\n  });\n  const {\n    isHovered,\n    isPressed,\n    isFocused,\n    isSelected,\n    menuItemProps,\n    labelProps,\n    descriptionProps,\n    keyboardShortcutProps\n  } = useAriaMenuItem(\n    {\n      key,\n      onClose,\n      isDisabled,\n      onPress,\n      onClick,\n      onPressStart,\n      onPressUp,\n      onPressEnd,\n      onPressChange,\n      \"aria-label\": props[\"aria-label\"],\n      closeOnSelect,\n      isVirtualized,\n      onAction\n    },\n    state,\n    domRef\n  );\n  let itemProps = menuItemProps;\n  const slots = useMemo(\n    () => menuItem({\n      ...variantProps,\n      isDisabled,\n      disableAnimation\n    }),\n    [objectToDeps(variantProps), isDisabled, disableAnimation]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  if (isReadOnly) {\n    itemProps = removeEvents(itemProps);\n  }\n  const getItemProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(\n      isReadOnly ? {} : focusProps,\n      filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }),\n      itemProps,\n      props2\n    ),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-selectable\": dataAttr(isSelectable),\n    \"data-hover\": dataAttr(isMobile ? isHovered || isPressed : isHovered),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-selected\": dataAttr(isSelected),\n    \"data-pressed\": dataAttr(isPressed),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    className: slots.base({ class: clsx(baseStyles, props2.className) })\n  });\n  const getLabelProps = (props2 = {}) => ({\n    ...mergeProps(labelProps, props2),\n    className: slots.title({ class: classNames == null ? void 0 : classNames.title })\n  });\n  const getDescriptionProps = (props2 = {}) => ({\n    ...mergeProps(descriptionProps, props2),\n    className: slots.description({ class: classNames == null ? void 0 : classNames.description })\n  });\n  const getKeyboardShortcutProps = (props2 = {}) => ({\n    ...mergeProps(keyboardShortcutProps, props2),\n    className: slots.shortcut({ class: classNames == null ? void 0 : classNames.shortcut })\n  });\n  const getSelectedIconProps = useCallback(\n    (props2 = {}) => {\n      return {\n        \"aria-hidden\": dataAttr(true),\n        \"data-disabled\": dataAttr(isDisabled),\n        className: slots.selectedIcon({ class: classNames == null ? void 0 : classNames.selectedIcon }),\n        ...props2\n      };\n    },\n    [isDisabled, slots, classNames]\n  );\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    isSelectable,\n    isSelected,\n    isDisabled,\n    rendered,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    selectedIcon,\n    disableAnimation,\n    getItemProps,\n    getLabelProps,\n    hideSelectedIcon,\n    getDescriptionProps,\n    getKeyboardShortcutProps,\n    getSelectedIconProps\n  };\n}\n\nexport {\n  useMenuItem\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}