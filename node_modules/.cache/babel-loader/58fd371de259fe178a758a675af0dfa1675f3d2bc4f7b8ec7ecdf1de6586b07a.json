{"ast":null,"code":"import { tabsIds as $99b62ae3ff97ec45$export$c5f62239608282b6 } from \"./utils.mjs\";\nimport { TabsKeyboardDelegate as $bfc6f2d60b8a4c40$export$15010ca3c1abe90b } from \"./TabsKeyboardDelegate.mjs\";\nimport { useId as $bQNZs$useId, useLabels as $bQNZs$useLabels, mergeProps as $bQNZs$mergeProps } from \"@react-aria/utils\";\nimport { useMemo as $bQNZs$useMemo } from \"react\";\nimport { useLocale as $bQNZs$useLocale } from \"@react-aria/i18n\";\nimport { useSelectableCollection as $bQNZs$useSelectableCollection } from \"@react-aria/selection\";\n\n/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\nfunction $58d314389b21fa3f$export$773e389e644c5874(props, state, ref) {\n  let {\n    orientation = 'horizontal',\n    keyboardActivation = 'automatic'\n  } = props;\n  let {\n    collection: collection,\n    selectionManager: manager,\n    disabledKeys: disabledKeys\n  } = state;\n  let {\n    direction: direction\n  } = (0, $bQNZs$useLocale)();\n  let delegate = (0, $bQNZs$useMemo)(() => new (0, $bfc6f2d60b8a4c40$export$15010ca3c1abe90b)(collection, direction, orientation, disabledKeys), [collection, disabledKeys, orientation, direction]);\n  let {\n    collectionProps: collectionProps\n  } = (0, $bQNZs$useSelectableCollection)({\n    ref: ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true,\n    scrollRef: ref,\n    linkBehavior: 'selection'\n  });\n  // Compute base id for all tabs\n  let tabsId = (0, $bQNZs$useId)();\n  (0, $99b62ae3ff97ec45$export$c5f62239608282b6).set(state, tabsId);\n  let tabListLabelProps = (0, $bQNZs$useLabels)({\n    ...props,\n    id: tabsId\n  });\n  return {\n    tabListProps: {\n      ...(0, $bQNZs$mergeProps)(collectionProps, tabListLabelProps),\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    }\n  };\n}\nexport { $58d314389b21fa3f$export$773e389e644c5874 as useTabList };","map":{"version":3,"names":["$58d314389b21fa3f$export$773e389e644c5874","props","state","ref","orientation","keyboardActivation","collection","selectionManager","manager","disabledKeys","direction","$bQNZs$useLocale","delegate","$bQNZs$useMemo","$bfc6f2d60b8a4c40$export$15010ca3c1abe90b","collectionProps","$bQNZs$useSelectableCollection","keyboardDelegate","selectOnFocus","disallowEmptySelection","scrollRef","linkBehavior","tabsId","$bQNZs$useId","$99b62ae3ff97ec45$export$c5f62239608282b6","set","tabListLabelProps","$bQNZs$useLabels","id","tabListProps","$bQNZs$mergeProps","role","tabIndex","undefined"],"sources":["/Users/mario/Documents/Development/portfolio/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/useTabList.ts"],"sourcesContent":["/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\nimport {AriaTabListProps} from '@react-types/tabs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps, useId, useLabels} from '@react-aria/utils';\nimport {RefObject, useMemo} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {tabsIds} from './utils';\nimport {TabsKeyboardDelegate} from './TabsKeyboardDelegate';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface AriaTabListOptions<T> extends Omit<AriaTabListProps<T>, 'children'> {}\n\nexport interface TabListAria {\n  /** Props for the tablist container. */\n  tabListProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tab list.\n * Tabs organize content into multiple sections and allow users to navigate between them.\n */\nexport function useTabList<T>(props: AriaTabListOptions<T>, state: TabListState<T>, ref: RefObject<HTMLElement>): TabListAria {\n  let {\n    orientation = 'horizontal',\n    keyboardActivation = 'automatic'\n  } = props;\n  let {\n    collection,\n    selectionManager: manager,\n    disabledKeys\n  } = state;\n  let {direction} = useLocale();\n  let delegate = useMemo(() => new TabsKeyboardDelegate(\n    collection,\n    direction,\n    orientation,\n    disabledKeys), [collection, disabledKeys, orientation, direction]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true,\n    scrollRef: ref,\n    linkBehavior: 'selection'\n  });\n\n  // Compute base id for all tabs\n  let tabsId = useId();\n  tabsIds.set(state, tabsId);\n\n  let tabListLabelProps = useLabels({...props, id: tabsId});\n\n  return {\n    tabListProps: {\n      ...mergeProps(collectionProps, tabListLabelProps),\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    }\n  };\n}\n"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAUA;;AAuBO,SAASA,0CAAcC,KAA4B,EAAEC,KAAsB,EAAEC,GAA2B;EAC7G,IAAI;IACFC,WAAA,GAAc;IACdC,kBAAA,GAAqB;EAAA,CACtB,GAAGJ,KAAA;EACJ,IAAI;IAAAK,UAAA,EACFA,UAAU;IACVC,gBAAA,EAAkBC,OAAO;IAAAC,YAAA,EACzBA;EAAY,CACb,GAAGP,KAAA;EACJ,IAAI;IAAAQ,SAAA,EAACA;EAAS,CAAC,GAAG,IAAAC,gBAAQ;EAC1B,IAAIC,QAAA,GAAW,IAAAC,cAAM,EAAE,MAAM,KAAI,GAAAC,yCAAmB,EAClDR,UAAA,EACAI,SAAA,EACAN,WAAA,EACAK,YAAA,GAAe,CAACH,UAAA,EAAYG,YAAA,EAAcL,WAAA,EAAaM,SAAA,CAAU;EAEnE,IAAI;IAAAK,eAAA,EAACA;EAAe,CAAC,GAAG,IAAAC,8BAAsB,EAAE;SAC9Cb,GAAA;IACAI,gBAAA,EAAkBC,OAAA;IAClBS,gBAAA,EAAkBL,QAAA;IAClBM,aAAA,EAAeb,kBAAA,KAAuB;IACtCc,sBAAA,EAAwB;IACxBC,SAAA,EAAWjB,GAAA;IACXkB,YAAA,EAAc;EAChB;EAEA;EACA,IAAIC,MAAA,GAAS,IAAAC,YAAI;EACjB,IAAAC,yCAAM,EAAEC,GAAG,CAACvB,KAAA,EAAOoB,MAAA;EAEnB,IAAII,iBAAA,GAAoB,IAAAC,gBAAQ,EAAE;IAAC,GAAG1B,KAAK;IAAE2B,EAAA,EAAIN;EAAM;EAEvD,OAAO;IACLO,YAAA,EAAc;MACZ,GAAG,IAAAC,iBAAS,EAAEf,eAAA,EAAiBW,iBAAA,CAAkB;MACjDK,IAAA,EAAM;MACN,oBAAoB3B,WAAA;MACpB4B,QAAA,EAAUC;IACZ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}