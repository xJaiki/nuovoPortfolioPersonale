{"ast":null,"code":"import { hookData as $a074e1e2d0f0a665$export$653eddfc964b0f8a, useVisibleRangeDescription as $a074e1e2d0f0a665$export$31afe65d91ef6e8 } from \"./utils.mjs\";\nimport { startOfWeek as $NQfxu$startOfWeek, today as $NQfxu$today } from \"@internationalized/date\";\nimport { useMemo as $NQfxu$useMemo } from \"react\";\nimport { useLabels as $NQfxu$useLabels, mergeProps as $NQfxu$mergeProps } from \"@react-aria/utils\";\nimport { useLocale as $NQfxu$useLocale, useDateFormatter as $NQfxu$useDateFormatter } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $e3031d1f8c9d64eb$export$cb95147730a423f5(props, state) {\n  let {\n    startDate = state.visibleRange.start,\n    endDate = state.visibleRange.end\n  } = props;\n  let {\n    direction: direction\n  } = (0, $NQfxu$useLocale)();\n  let onKeyDown = e => {\n    switch (e.key) {\n      case 'Enter':\n      case ' ':\n        e.preventDefault();\n        state.selectFocusedDate();\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusPreviousSection(e.shiftKey);\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusNextSection(e.shiftKey);\n        break;\n      case 'End':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusSectionEnd();\n        break;\n      case 'Home':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusSectionStart();\n        break;\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') state.focusNextDay();else state.focusPreviousDay();\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusPreviousRow();\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') state.focusPreviousDay();else state.focusNextDay();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusNextRow();\n        break;\n      case 'Escape':\n        // Cancel the selection.\n        if ('setAnchorDate' in state) {\n          e.preventDefault();\n          state.setAnchorDate(null);\n        }\n        break;\n    }\n  };\n  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(startDate, endDate, state.timeZone, true);\n  let {\n    ariaLabel: ariaLabel,\n    ariaLabelledBy: ariaLabelledBy\n  } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);\n  let labelProps = (0, $NQfxu$useLabels)({\n    'aria-label': [ariaLabel, visibleRangeDescription].filter(Boolean).join(', '),\n    'aria-labelledby': ariaLabelledBy\n  });\n  let dayFormatter = (0, $NQfxu$useDateFormatter)({\n    weekday: props.weekdayStyle || 'narrow',\n    timeZone: state.timeZone\n  });\n  let {\n    locale: locale\n  } = (0, $NQfxu$useLocale)();\n  let weekDays = (0, $NQfxu$useMemo)(() => {\n    let weekStart = (0, $NQfxu$startOfWeek)((0, $NQfxu$today)(state.timeZone), locale);\n    return [...new Array(7).keys()].map(index => {\n      let date = weekStart.add({\n        days: index\n      });\n      let dateDay = date.toDate(state.timeZone);\n      return dayFormatter.format(dateDay);\n    });\n  }, [locale, state.timeZone, dayFormatter]);\n  return {\n    gridProps: (0, $NQfxu$mergeProps)(labelProps, {\n      role: 'grid',\n      'aria-readonly': state.isReadOnly || null,\n      'aria-disabled': state.isDisabled || null,\n      'aria-multiselectable': 'highlightedRange' in state || undefined,\n      onKeyDown: onKeyDown,\n      onFocus: () => state.setFocused(true),\n      onBlur: () => state.setFocused(false)\n    }),\n    headerProps: {\n      // Column headers are hidden to screen readers to make navigating with a touch screen reader easier.\n      // The day names are already included in the label of each cell, so there's no need to announce them twice.\n      'aria-hidden': true\n    },\n    weekDays: weekDays\n  };\n}\nexport { $e3031d1f8c9d64eb$export$cb95147730a423f5 as useCalendarGrid };","map":{"version":3,"names":["$e3031d1f8c9d64eb$export$cb95147730a423f5","props","state","startDate","visibleRange","start","endDate","end","direction","$NQfxu$useLocale","onKeyDown","e","key","preventDefault","selectFocusedDate","stopPropagation","focusPreviousSection","shiftKey","focusNextSection","focusSectionEnd","focusSectionStart","focusNextDay","focusPreviousDay","focusPreviousRow","focusNextRow","setAnchorDate","visibleRangeDescription","$a074e1e2d0f0a665$export$31afe65d91ef6e8","timeZone","ariaLabel","ariaLabelledBy","$a074e1e2d0f0a665$export$653eddfc964b0f8a","get","labelProps","$NQfxu$useLabels","filter","Boolean","join","dayFormatter","$NQfxu$useDateFormatter","weekday","weekdayStyle","locale","weekDays","$NQfxu$useMemo","weekStart","$NQfxu$startOfWeek","$NQfxu$today","Array","keys","map","index","date","add","days","dateDay","toDate","format","gridProps","$NQfxu$mergeProps","role","isReadOnly","isDisabled","undefined","onFocus","setFocused","onBlur","headerProps"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@react-aria/calendar/dist/packages/@react-aria/calendar/src/useCalendarGrid.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, startOfWeek, today} from '@internationalized/date';\nimport {CalendarState, RangeCalendarState} from '@react-stately/calendar';\nimport {DOMAttributes} from '@react-types/shared';\nimport {hookData, useVisibleRangeDescription} from './utils';\nimport {KeyboardEvent, useMemo} from 'react';\nimport {mergeProps, useLabels} from '@react-aria/utils';\nimport {useDateFormatter, useLocale} from '@react-aria/i18n';\n\nexport interface AriaCalendarGridProps {\n  /**\n   * The first date displayed in the calendar grid.\n   * Defaults to the first visible date in the calendar.\n   * Override this to display multiple date grids in a calendar.\n   */\n  startDate?: CalendarDate,\n  /**\n   * The last date displayed in the calendar grid.\n   * Defaults to the last visible date in the calendar.\n   * Override this to display multiple date grids in a calendar.\n   */\n  endDate?: CalendarDate,\n  /**\n   * The style of weekday names to display in the calendar grid header,\n   * e.g. single letter, abbreviation, or full day name.\n   * @default \"narrow\"\n   */\n  weekdayStyle?: 'narrow' | 'short' | 'long'\n}\n\nexport interface CalendarGridAria {\n  /** Props for the date grid element (e.g. `<table>`). */\n  gridProps: DOMAttributes,\n  /** Props for the grid header element (e.g. `<thead>`). */\n  headerProps: DOMAttributes,\n  /** A list of week day abbreviations formatted for the current locale, typically used in column headers. */\n  weekDays: string[]\n}\n\n/**\n * Provides the behavior and accessibility implementation for a calendar grid component.\n * A calendar grid displays a single grid of days within a calendar or range calendar which\n * can be keyboard navigated and selected by the user.\n */\nexport function useCalendarGrid(props: AriaCalendarGridProps, state: CalendarState | RangeCalendarState): CalendarGridAria {\n  let {\n    startDate = state.visibleRange.start,\n    endDate = state.visibleRange.end\n  } = props;\n\n  let {direction} = useLocale();\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'Enter':\n      case ' ':\n        e.preventDefault();\n        state.selectFocusedDate();\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusPreviousSection(e.shiftKey);\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusNextSection(e.shiftKey);\n        break;\n      case 'End':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusSectionEnd();\n        break;\n      case 'Home':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusSectionStart();\n        break;\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') {\n          state.focusNextDay();\n        } else {\n          state.focusPreviousDay();\n        }\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusPreviousRow();\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') {\n          state.focusPreviousDay();\n        } else {\n          state.focusNextDay();\n        }\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        e.stopPropagation();\n        state.focusNextRow();\n        break;\n      case 'Escape':\n        // Cancel the selection.\n        if ('setAnchorDate' in state) {\n          e.preventDefault();\n          state.setAnchorDate(null);\n        }\n        break;\n    }\n  };\n\n  let visibleRangeDescription = useVisibleRangeDescription(startDate, endDate, state.timeZone, true);\n\n  let {ariaLabel, ariaLabelledBy} = hookData.get(state);\n  let labelProps = useLabels({\n    'aria-label': [ariaLabel, visibleRangeDescription].filter(Boolean).join(', '),\n    'aria-labelledby': ariaLabelledBy\n  });\n\n  let dayFormatter = useDateFormatter({weekday: props.weekdayStyle || 'narrow', timeZone: state.timeZone});\n  let {locale} = useLocale();\n  let weekDays = useMemo(() => {\n    let weekStart = startOfWeek(today(state.timeZone), locale);\n    return [...new Array(7).keys()].map((index) => {\n      let date = weekStart.add({days: index});\n      let dateDay = date.toDate(state.timeZone);\n      return dayFormatter.format(dateDay);\n    });\n  }, [locale, state.timeZone, dayFormatter]);\n\n  return {\n    gridProps: mergeProps(labelProps, {\n      role: 'grid',\n      'aria-readonly': state.isReadOnly || null,\n      'aria-disabled': state.isDisabled || null,\n      'aria-multiselectable': ('highlightedRange' in state) || undefined,\n      onKeyDown,\n      onFocus: () => state.setFocused(true),\n      onBlur: () => state.setFocused(false)\n    }),\n    headerProps: {\n      // Column headers are hidden to screen readers to make navigating with a touch screen reader easier.\n      // The day names are already included in the label of each cell, so there's no need to announce them twice.\n      'aria-hidden': true\n    },\n    weekDays\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}