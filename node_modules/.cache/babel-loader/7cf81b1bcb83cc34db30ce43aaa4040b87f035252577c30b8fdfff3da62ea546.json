{"ast":null,"code":"\"use client\";\n\n// src/use-tabs.ts\nimport { mapPropsVariants, useProviderContext } from \"@nextui-org/system\";\nimport { tabs } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nimport { useMemo, useCallback } from \"react\";\nimport { useTabListState } from \"@react-stately/tabs\";\nimport { useTabList } from \"@react-aria/tabs\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useTabs(originalProps) {\n  var _a, _b, _c;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, tabs.variantKeys);\n  const {\n    ref,\n    as,\n    className,\n    classNames,\n    children,\n    disableCursorAnimation,\n    motionProps,\n    isVertical = false,\n    shouldSelectOnPressUp = true,\n    destroyInactiveTabPanel = true,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const state = useTabListState({\n    children,\n    ...otherProps\n  });\n  const {\n    tabListProps\n  } = useTabList(otherProps, state, domRef);\n  const slots = useMemo(() => tabs({\n    ...variantProps,\n    className,\n    disableAnimation,\n    ...(isVertical ? {\n      placement: \"start\"\n    } : {})\n  }), [objectToDeps(variantProps), className, disableAnimation, isVertical]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const values = useMemo(() => ({\n    state,\n    slots,\n    classNames,\n    motionProps,\n    disableAnimation,\n    listRef: domRef,\n    shouldSelectOnPressUp,\n    disableCursorAnimation,\n    isDisabled: originalProps == null ? void 0 : originalProps.isDisabled\n  }), [state, slots, domRef, motionProps, disableAnimation, disableCursorAnimation, shouldSelectOnPressUp, originalProps == null ? void 0 : originalProps.isDisabled, classNames]);\n  const getBaseProps = useCallback(props2 => ({\n    \"data-slot\": \"base\",\n    className: slots.base({\n      class: clsx(baseStyles, props2 == null ? void 0 : props2.className)\n    }),\n    ...mergeProps(filterDOMProps(otherProps, {\n      enabled: shouldFilterDOMProps\n    }), props2)\n  }), [baseStyles, otherProps, slots]);\n  const placement = (_c = variantProps.placement) != null ? _c : isVertical ? \"start\" : \"top\";\n  const getWrapperProps = useCallback(props2 => ({\n    \"data-slot\": \"tabWrapper\",\n    className: slots.wrapper({\n      class: clsx(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className)\n    }),\n    \"data-placement\": placement,\n    \"data-vertical\": isVertical || placement === \"start\" || placement === \"end\" ? \"vertical\" : \"horizontal\"\n  }), [classNames, slots, placement, isVertical]);\n  const getTabListProps = useCallback(props2 => ({\n    ref: domRef,\n    \"data-slot\": \"tabList\",\n    className: slots.tabList({\n      class: clsx(classNames == null ? void 0 : classNames.tabList, props2 == null ? void 0 : props2.className)\n    }),\n    ...mergeProps(tabListProps, props2)\n  }), [domRef, tabListProps, classNames, slots]);\n  return {\n    Component,\n    domRef,\n    state,\n    values,\n    destroyInactiveTabPanel,\n    getBaseProps,\n    getTabListProps,\n    getWrapperProps\n  };\n}\nexport { useTabs };","map":{"version":3,"names":["mapPropsVariants","useProviderContext","tabs","useDOMRef","clsx","objectToDeps","filterDOMProps","useMemo","useCallback","useTabListState","useTabList","mergeProps","useTabs","originalProps","_a","_b","_c","globalContext","props","variantProps","variantKeys","ref","as","className","classNames","children","disableCursorAnimation","motionProps","isVertical","shouldSelectOnPressUp","destroyInactiveTabPanel","otherProps","Component","shouldFilterDOMProps","domRef","disableAnimation","state","tabListProps","slots","placement","baseStyles","base","values","listRef","isDisabled","getBaseProps","props2","class","enabled","getWrapperProps","wrapper","getTabListProps","tabList"],"sources":["/Users/mario/Documents/Development/portfolio/node_modules/@nextui-org/tabs/dist/chunk-73H64UCB.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-tabs.ts\nimport {\n  mapPropsVariants,\n  useProviderContext\n} from \"@nextui-org/system\";\nimport { tabs } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nimport { useMemo, useCallback } from \"react\";\nimport { useTabListState } from \"@react-stately/tabs\";\nimport { useTabList } from \"@react-aria/tabs\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useTabs(originalProps) {\n  var _a, _b, _c;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, tabs.variantKeys);\n  const {\n    ref,\n    as,\n    className,\n    classNames,\n    children,\n    disableCursorAnimation,\n    motionProps,\n    isVertical = false,\n    shouldSelectOnPressUp = true,\n    destroyInactiveTabPanel = true,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const state = useTabListState({\n    children,\n    ...otherProps\n  });\n  const { tabListProps } = useTabList(otherProps, state, domRef);\n  const slots = useMemo(\n    () => tabs({\n      ...variantProps,\n      className,\n      disableAnimation,\n      ...isVertical ? { placement: \"start\" } : {}\n    }),\n    [objectToDeps(variantProps), className, disableAnimation, isVertical]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const values = useMemo(\n    () => ({\n      state,\n      slots,\n      classNames,\n      motionProps,\n      disableAnimation,\n      listRef: domRef,\n      shouldSelectOnPressUp,\n      disableCursorAnimation,\n      isDisabled: originalProps == null ? void 0 : originalProps.isDisabled\n    }),\n    [\n      state,\n      slots,\n      domRef,\n      motionProps,\n      disableAnimation,\n      disableCursorAnimation,\n      shouldSelectOnPressUp,\n      originalProps == null ? void 0 : originalProps.isDisabled,\n      classNames\n    ]\n  );\n  const getBaseProps = useCallback(\n    (props2) => ({\n      \"data-slot\": \"base\",\n      className: slots.base({ class: clsx(baseStyles, props2 == null ? void 0 : props2.className) }),\n      ...mergeProps(\n        filterDOMProps(otherProps, {\n          enabled: shouldFilterDOMProps\n        }),\n        props2\n      )\n    }),\n    [baseStyles, otherProps, slots]\n  );\n  const placement = (_c = variantProps.placement) != null ? _c : isVertical ? \"start\" : \"top\";\n  const getWrapperProps = useCallback(\n    (props2) => ({\n      \"data-slot\": \"tabWrapper\",\n      className: slots.wrapper({ class: clsx(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className) }),\n      \"data-placement\": placement,\n      \"data-vertical\": isVertical || placement === \"start\" || placement === \"end\" ? \"vertical\" : \"horizontal\"\n    }),\n    [classNames, slots, placement, isVertical]\n  );\n  const getTabListProps = useCallback(\n    (props2) => ({\n      ref: domRef,\n      \"data-slot\": \"tabList\",\n      className: slots.tabList({ class: clsx(classNames == null ? void 0 : classNames.tabList, props2 == null ? void 0 : props2.className) }),\n      ...mergeProps(tabListProps, props2)\n    }),\n    [domRef, tabListProps, classNames, slots]\n  );\n  return {\n    Component,\n    domRef,\n    state,\n    values,\n    destroyInactiveTabPanel,\n    getBaseProps,\n    getTabListProps,\n    getWrapperProps\n  };\n}\n\nexport {\n  useTabs\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}