{"ast":null,"code":"import { generateId as $99b62ae3ff97ec45$export$567fc7097e064344 } from \"./utils.mjs\";\nimport { useLabels as $jik2T$useLabels, mergeProps as $jik2T$mergeProps } from \"@react-aria/utils\";\nimport { useHasTabbableChild as $jik2T$useHasTabbableChild } from \"@react-aria/focus\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $34bce698202e07cb$export$fae0121b5afe572d(props, state, ref) {\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  let tabIndex = (0, $jik2T$useHasTabbableChild)(ref) ? undefined : 0;\n  var _props_id;\n  const id = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, (_props_id = props.id) !== null && _props_id !== void 0 ? _props_id : state === null || state === void 0 ? void 0 : state.selectedKey, 'tabpanel');\n  const tabPanelProps = (0, $jik2T$useLabels)({\n    ...props,\n    id: id,\n    'aria-labelledby': (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, state === null || state === void 0 ? void 0 : state.selectedKey, 'tab')\n  });\n  return {\n    tabPanelProps: (0, $jik2T$mergeProps)(tabPanelProps, {\n      tabIndex: tabIndex,\n      role: 'tabpanel',\n      'aria-describedby': props['aria-describedby'],\n      'aria-details': props['aria-details']\n    })\n  };\n}\nexport { $34bce698202e07cb$export$fae0121b5afe572d as useTabPanel };","map":{"version":3,"names":["$34bce698202e07cb$export$fae0121b5afe572d","props","state","ref","tabIndex","$jik2T$useHasTabbableChild","undefined","_props_id","id","$99b62ae3ff97ec45$export$567fc7097e064344","selectedKey","tabPanelProps","$jik2T$useLabels","$jik2T$mergeProps","role"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/useTabPanel.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabPanelProps} from '@react-types/tabs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {generateId} from './utils';\nimport {mergeProps, useLabels} from '@react-aria/utils';\nimport {RefObject} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {useHasTabbableChild} from '@react-aria/focus';\n\nexport interface TabPanelAria {\n  /** Props for the tab panel element. */\n  tabPanelProps: DOMAttributes\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a tab panel. A tab panel is a container for\n * the contents of a tab, and is shown when the tab is selected.\n */\nexport function useTabPanel<T>(props: AriaTabPanelProps, state: TabListState<T>, ref: RefObject<Element>): TabPanelAria {\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  let tabIndex = useHasTabbableChild(ref) ? undefined : 0;\n\n  const id = generateId(state, props.id ?? state?.selectedKey, 'tabpanel');\n  const tabPanelProps = useLabels({...props, id, 'aria-labelledby': generateId(state, state?.selectedKey, 'tab')});\n\n  return {\n    tabPanelProps: mergeProps(tabPanelProps, {\n      tabIndex,\n      role: 'tabpanel',\n      'aria-describedby': props['aria-describedby'],\n      'aria-details': props['aria-details']\n    })\n  };\n}\n"],"mappings":";;;;AAAA;;;;;;;;;;;;AA8BO,SAASA,0CAAeC,KAAwB,EAAEC,KAAsB,EAAEC,GAAuB;EACtG;EACA;EACA;EACA,IAAIC,QAAA,GAAW,IAAAC,0BAAkB,EAAEF,GAAA,IAAOG,SAAA,GAAY;MAEzBC,SAAA;EAA7B,MAAMC,EAAA,GAAK,IAAAC,yCAAS,EAAEP,KAAA,EAAO,CAAAK,SAAA,GAAAN,KAAA,CAAMO,EAAE,cAARD,SAAA,cAAAA,SAAA,GAAYL,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOQ,WAAW,EAAE;EAC7D,MAAMC,aAAA,GAAgB,IAAAC,gBAAQ,EAAE;IAAC,GAAGX,KAAK;QAAEO,EAAA;IAAI,mBAAmB,IAAAC,yCAAS,EAAEP,KAAA,EAAOA,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOQ,WAAW,EAAE;EAAM;EAE9G,OAAO;IACLC,aAAA,EAAe,IAAAE,iBAAS,EAAEF,aAAA,EAAe;gBACvCP,QAAA;MACAU,IAAA,EAAM;MACN,oBAAoBb,KAAK,CAAC,mBAAmB;MAC7C,gBAAgBA,KAAK,CAAC;IACxB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}