{"ast":null,"code":"\"use client\";\n\nimport { useSnippet } from \"./chunk-ITBM7SHQ.mjs\";\n\n// src/snippet.tsx\nimport { useCallback, useMemo, cloneElement } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { Tooltip } from \"@nextui-org/tooltip\";\nimport { CopyLinearIcon, CheckLinearIcon } from \"@nextui-org/shared-icons\";\nimport { Button } from \"@nextui-org/button\";\nimport { objectToDeps } from \"@nextui-org/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Snippet = forwardRef((props, ref) => {\n  const {\n    Component,\n    domRef,\n    preRef,\n    children,\n    slots,\n    classNames,\n    copied,\n    copyIcon = /* @__PURE__ */jsx(CopyLinearIcon, {}),\n    checkIcon = /* @__PURE__ */jsx(CheckLinearIcon, {}),\n    symbolBefore,\n    disableCopy,\n    disableTooltip,\n    hideSymbol,\n    hideCopyButton,\n    tooltipProps,\n    isMultiLine,\n    onCopy,\n    getSnippetProps,\n    getCopyButtonProps\n  } = useSnippet({\n    ...props,\n    ref\n  });\n  const TooltipContent = useCallback(({\n    children: children2\n  }) => /* @__PURE__ */jsx(Tooltip, {\n    ...tooltipProps,\n    isDisabled: copied || tooltipProps.isDisabled,\n    children: children2\n  }), [objectToDeps(tooltipProps)]);\n  const contents = useMemo(() => {\n    if (hideCopyButton) {\n      return null;\n    }\n    const clonedCheckIcon = checkIcon && cloneElement(checkIcon, {\n      className: slots.checkIcon()\n    });\n    const clonedCopyIcon = copyIcon && cloneElement(copyIcon, {\n      className: slots.copyIcon()\n    });\n    const copyButton = /* @__PURE__ */jsxs(Button, {\n      ...getCopyButtonProps(),\n      children: [clonedCheckIcon, clonedCopyIcon]\n    });\n    if (disableTooltip) {\n      return copyButton;\n    }\n    return /* @__PURE__ */jsx(TooltipContent, {\n      children: copyButton\n    });\n  }, [slots, classNames == null ? void 0 : classNames.copyButton, copied, checkIcon, copyIcon, onCopy, TooltipContent, disableCopy, disableTooltip, hideCopyButton]);\n  const preContent = useMemo(() => {\n    if (isMultiLine && children && Array.isArray(children)) {\n      return /* @__PURE__ */jsx(\"div\", {\n        className: slots.content({\n          class: classNames == null ? void 0 : classNames.content\n        }),\n        children: children.map((t, index) => /* @__PURE__ */jsxs(\"pre\", {\n          className: slots.pre({\n            class: classNames == null ? void 0 : classNames.pre\n          }),\n          children: [!hideSymbol && /* @__PURE__ */jsx(\"span\", {\n            className: slots.symbol({\n              class: classNames == null ? void 0 : classNames.symbol\n            }),\n            children: symbolBefore\n          }), t]\n        }, `${index}-${t}`))\n      });\n    }\n    return /* @__PURE__ */jsxs(\"pre\", {\n      ref: preRef,\n      className: slots.pre({\n        class: classNames == null ? void 0 : classNames.pre\n      }),\n      children: [!hideSymbol && /* @__PURE__ */jsx(\"span\", {\n        className: slots.symbol({\n          class: classNames == null ? void 0 : classNames.symbol\n        }),\n        children: symbolBefore\n      }), children]\n    });\n  }, [children, hideSymbol, isMultiLine, symbolBefore, classNames == null ? void 0 : classNames.pre, slots]);\n  return /* @__PURE__ */jsxs(Component, {\n    ref: domRef,\n    ...getSnippetProps(),\n    children: [preContent, contents]\n  });\n});\nSnippet.displayName = \"NextUI.Snippet\";\nvar snippet_default = Snippet;\nexport { snippet_default };","map":{"version":3,"names":["useSnippet","useCallback","useMemo","cloneElement","forwardRef","Tooltip","CopyLinearIcon","CheckLinearIcon","Button","objectToDeps","jsx","jsxs","Snippet","props","ref","Component","domRef","preRef","children","slots","classNames","copied","copyIcon","checkIcon","symbolBefore","disableCopy","disableTooltip","hideSymbol","hideCopyButton","tooltipProps","isMultiLine","onCopy","getSnippetProps","getCopyButtonProps","TooltipContent","children2","isDisabled","contents","clonedCheckIcon","className","clonedCopyIcon","copyButton","preContent","Array","isArray","content","class","map","t","index","pre","symbol","displayName","snippet_default"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@nextui-org/snippet/dist/chunk-2NDBIRLR.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useSnippet\n} from \"./chunk-ITBM7SHQ.mjs\";\n\n// src/snippet.tsx\nimport { useCallback, useMemo, cloneElement } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { Tooltip } from \"@nextui-org/tooltip\";\nimport { CopyLinearIcon, CheckLinearIcon } from \"@nextui-org/shared-icons\";\nimport { Button } from \"@nextui-org/button\";\nimport { objectToDeps } from \"@nextui-org/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Snippet = forwardRef((props, ref) => {\n  const {\n    Component,\n    domRef,\n    preRef,\n    children,\n    slots,\n    classNames,\n    copied,\n    copyIcon = /* @__PURE__ */ jsx(CopyLinearIcon, {}),\n    checkIcon = /* @__PURE__ */ jsx(CheckLinearIcon, {}),\n    symbolBefore,\n    disableCopy,\n    disableTooltip,\n    hideSymbol,\n    hideCopyButton,\n    tooltipProps,\n    isMultiLine,\n    onCopy,\n    getSnippetProps,\n    getCopyButtonProps\n  } = useSnippet({ ...props, ref });\n  const TooltipContent = useCallback(\n    ({ children: children2 }) => /* @__PURE__ */ jsx(Tooltip, { ...tooltipProps, isDisabled: copied || tooltipProps.isDisabled, children: children2 }),\n    [objectToDeps(tooltipProps)]\n  );\n  const contents = useMemo(() => {\n    if (hideCopyButton) {\n      return null;\n    }\n    const clonedCheckIcon = checkIcon && cloneElement(checkIcon, { className: slots.checkIcon() });\n    const clonedCopyIcon = copyIcon && cloneElement(copyIcon, { className: slots.copyIcon() });\n    const copyButton = /* @__PURE__ */ jsxs(Button, { ...getCopyButtonProps(), children: [\n      clonedCheckIcon,\n      clonedCopyIcon\n    ] });\n    if (disableTooltip) {\n      return copyButton;\n    }\n    return /* @__PURE__ */ jsx(TooltipContent, { children: copyButton });\n  }, [\n    slots,\n    classNames == null ? void 0 : classNames.copyButton,\n    copied,\n    checkIcon,\n    copyIcon,\n    onCopy,\n    TooltipContent,\n    disableCopy,\n    disableTooltip,\n    hideCopyButton\n  ]);\n  const preContent = useMemo(() => {\n    if (isMultiLine && children && Array.isArray(children)) {\n      return /* @__PURE__ */ jsx(\"div\", { className: slots.content({ class: classNames == null ? void 0 : classNames.content }), children: children.map((t, index) => /* @__PURE__ */ jsxs(\"pre\", { className: slots.pre({ class: classNames == null ? void 0 : classNames.pre }), children: [\n        !hideSymbol && /* @__PURE__ */ jsx(\"span\", { className: slots.symbol({ class: classNames == null ? void 0 : classNames.symbol }), children: symbolBefore }),\n        t\n      ] }, `${index}-${t}`)) });\n    }\n    return /* @__PURE__ */ jsxs(\"pre\", { ref: preRef, className: slots.pre({ class: classNames == null ? void 0 : classNames.pre }), children: [\n      !hideSymbol && /* @__PURE__ */ jsx(\"span\", { className: slots.symbol({ class: classNames == null ? void 0 : classNames.symbol }), children: symbolBefore }),\n      children\n    ] });\n  }, [children, hideSymbol, isMultiLine, symbolBefore, classNames == null ? void 0 : classNames.pre, slots]);\n  return /* @__PURE__ */ jsxs(Component, { ref: domRef, ...getSnippetProps(), children: [\n    preContent,\n    contents\n  ] });\n});\nSnippet.displayName = \"NextUI.Snippet\";\nvar snippet_default = Snippet;\n\nexport {\n  snippet_default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}