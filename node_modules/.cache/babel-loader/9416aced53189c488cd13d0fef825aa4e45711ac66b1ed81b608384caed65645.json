{"ast":null,"code":"import { Size as $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec } from \"./Size.mjs\";\nimport { Virtualizer as $38b9490c1cca8fc4$export$89be5a243e59c4b2 } from \"./Virtualizer.mjs\";\nimport { useState as $3Fik3$useState, useMemo as $3Fik3$useMemo, useEffect as $3Fik3$useEffect, useCallback as $3Fik3$useCallback } from \"react\";\nimport { useLayoutEffect as $3Fik3$useLayoutEffect } from \"@react-aria/utils\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $fc0b13b484ac1194$export$1505db82fe357e65(opts) {\n  let [visibleViews, setVisibleViews] = (0, $3Fik3$useState)([]);\n  let [contentSize, setContentSize] = (0, $3Fik3$useState)(new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)());\n  let [isAnimating, setAnimating] = (0, $3Fik3$useState)(false);\n  let [isScrolling, setScrolling] = (0, $3Fik3$useState)(false);\n  let virtualizer = (0, $3Fik3$useMemo)(() => new (0, $38b9490c1cca8fc4$export$89be5a243e59c4b2)(), []);\n  virtualizer.delegate = {\n    setVisibleViews: setVisibleViews,\n    setVisibleRect(rect) {\n      virtualizer.visibleRect = rect;\n      opts.onVisibleRectChange(rect);\n    },\n    setContentSize: setContentSize,\n    renderView: opts.renderView,\n    renderWrapper: opts.renderWrapper,\n    beginAnimations: () => setAnimating(true),\n    endAnimations: () => setAnimating(false),\n    getScrollAnchor: opts.getScrollAnchor\n  };\n  virtualizer.layout = opts.layout;\n  virtualizer.collection = opts.collection;\n  virtualizer.transitionDuration = opts.transitionDuration;\n  (0, $3Fik3$useLayoutEffect)(() => {\n    virtualizer.afterRender();\n  });\n  // eslint-disable-next-line arrow-body-style\n  (0, $3Fik3$useEffect)(() => {\n    return () => virtualizer.willUnmount();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let setVisibleRect = (0, $3Fik3$useCallback)(rect => {\n    virtualizer.visibleRect = rect;\n  }, [virtualizer]);\n  let startScrolling = (0, $3Fik3$useCallback)(() => {\n    virtualizer.startScrolling();\n    setScrolling(true);\n  }, [virtualizer]);\n  let endScrolling = (0, $3Fik3$useCallback)(() => {\n    virtualizer.endScrolling();\n    setScrolling(false);\n  }, [virtualizer]);\n  let state = (0, $3Fik3$useMemo)(() => ({\n    virtualizer: virtualizer,\n    visibleViews: visibleViews,\n    setVisibleRect: setVisibleRect,\n    contentSize: contentSize,\n    isAnimating: isAnimating,\n    isScrolling: isScrolling,\n    startScrolling: startScrolling,\n    endScrolling: endScrolling\n  }), [virtualizer, visibleViews, setVisibleRect, contentSize, isAnimating, isScrolling, startScrolling, endScrolling]);\n  return state;\n}\nexport { $fc0b13b484ac1194$export$1505db82fe357e65 as useVirtualizerState };","map":{"version":3,"names":["$fc0b13b484ac1194$export$1505db82fe357e65","opts","visibleViews","setVisibleViews","$3Fik3$useState","contentSize","setContentSize","$ee1bfa90a957fb8a$export$cb6da89c6af1a8ec","isAnimating","setAnimating","isScrolling","setScrolling","virtualizer","$3Fik3$useMemo","$38b9490c1cca8fc4$export$89be5a243e59c4b2","delegate","setVisibleRect","rect","visibleRect","onVisibleRectChange","renderView","renderWrapper","beginAnimations","endAnimations","getScrollAnchor","layout","collection","transitionDuration","$3Fik3$useLayoutEffect","afterRender","$3Fik3$useEffect","willUnmount","$3Fik3$useCallback","startScrolling","endScrolling","state"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@react-stately/virtualizer/dist/packages/@react-stately/virtualizer/src/useVirtualizerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Key} from '@react-types/shared';\nimport {Layout} from './Layout';\nimport {Rect} from './Rect';\nimport {ReusableView} from './ReusableView';\nimport {Size} from './Size';\nimport {useCallback, useEffect, useMemo, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {Virtualizer} from './Virtualizer';\n\ninterface VirtualizerProps<T extends object, V, W> {\n  renderView(type: string, content: T): V,\n  renderWrapper(\n    parent: ReusableView<T, V> | null,\n    reusableView: ReusableView<T, V>,\n    children: ReusableView<T, V>[],\n    renderChildren: (views: ReusableView<T, V>[]) => W[]\n  ): W,\n  layout: Layout<T>,\n  collection: Collection<T>,\n  onVisibleRectChange(rect: Rect): void,\n  getScrollAnchor?(rect: Rect): Key,\n  transitionDuration?: number\n}\n\nexport interface VirtualizerState<T extends object, V, W> {\n  visibleViews: W[],\n  setVisibleRect: (rect: Rect) => void,\n  contentSize: Size,\n  isAnimating: boolean,\n  virtualizer: Virtualizer<T, V, W>,\n  isScrolling: boolean,\n  startScrolling: () => void,\n  endScrolling: () => void\n}\n\nexport function useVirtualizerState<T extends object, V, W>(opts: VirtualizerProps<T, V, W>): VirtualizerState<T, V, W> {\n  let [visibleViews, setVisibleViews] = useState<W[]>([]);\n  let [contentSize, setContentSize] = useState(new Size());\n  let [isAnimating, setAnimating] = useState(false);\n  let [isScrolling, setScrolling] = useState(false);\n  let virtualizer = useMemo(() => new Virtualizer<T, V, W>(), []);\n\n  virtualizer.delegate = {\n    setVisibleViews,\n    setVisibleRect(rect) {\n      virtualizer.visibleRect = rect;\n      opts.onVisibleRectChange(rect);\n    },\n    setContentSize,\n    renderView: opts.renderView,\n    renderWrapper: opts.renderWrapper,\n    beginAnimations: () => setAnimating(true),\n    endAnimations: () => setAnimating(false),\n    getScrollAnchor: opts.getScrollAnchor\n  };\n\n  virtualizer.layout = opts.layout;\n  virtualizer.collection = opts.collection;\n  virtualizer.transitionDuration = opts.transitionDuration;\n\n  useLayoutEffect(() => {\n    virtualizer.afterRender();\n  });\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => virtualizer.willUnmount();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let setVisibleRect = useCallback((rect) => {\n    virtualizer.visibleRect = rect;\n  }, [virtualizer]);\n  let startScrolling = useCallback(() => {\n    virtualizer.startScrolling();\n    setScrolling(true);\n  }, [virtualizer]);\n  let endScrolling = useCallback(() => {\n    virtualizer.endScrolling();\n    setScrolling(false);\n  }, [virtualizer]);\n\n  let state = useMemo(() => ({\n    virtualizer,\n    visibleViews,\n    setVisibleRect,\n    contentSize,\n    isAnimating,\n    isScrolling,\n    startScrolling,\n    endScrolling\n  }), [\n    virtualizer,\n    visibleViews,\n    setVisibleRect,\n    contentSize,\n    isAnimating,\n    isScrolling,\n    startScrolling,\n    endScrolling\n  ]);\n\n  return state;\n}\n"],"mappings":";;;;;AAAA;;;;;;;;;;;;AA+CO,SAASA,0CAA4CC,IAA+B;EACzF,IAAI,CAACC,YAAA,EAAcC,eAAA,CAAgB,GAAG,IAAAC,eAAO,EAAO,EAAE;EACtD,IAAI,CAACC,WAAA,EAAaC,cAAA,CAAe,GAAG,IAAAF,eAAO,EAAE,KAAI,GAAAG,yCAAG;EACpD,IAAI,CAACC,WAAA,EAAaC,YAAA,CAAa,GAAG,IAAAL,eAAO,EAAE;EAC3C,IAAI,CAACM,WAAA,EAAaC,YAAA,CAAa,GAAG,IAAAP,eAAO,EAAE;EAC3C,IAAIQ,WAAA,GAAc,IAAAC,cAAM,EAAE,MAAM,KAAI,GAAAC,yCAAU,KAAc,EAAE;EAE9DF,WAAA,CAAYG,QAAQ,GAAG;qBACrBZ,eAAA;IACAa,eAAeC,IAAI;MACjBL,WAAA,CAAYM,WAAW,GAAGD,IAAA;MAC1BhB,IAAA,CAAKkB,mBAAmB,CAACF,IAAA;IAC3B;oBACAX,cAAA;IACAc,UAAA,EAAYnB,IAAA,CAAKmB,UAAU;IAC3BC,aAAA,EAAepB,IAAA,CAAKoB,aAAa;IACjCC,eAAA,EAAiBA,CAAA,KAAMb,YAAA,CAAa;IACpCc,aAAA,EAAeA,CAAA,KAAMd,YAAA,CAAa;IAClCe,eAAA,EAAiBvB,IAAA,CAAKuB;EACxB;EAEAZ,WAAA,CAAYa,MAAM,GAAGxB,IAAA,CAAKwB,MAAM;EAChCb,WAAA,CAAYc,UAAU,GAAGzB,IAAA,CAAKyB,UAAU;EACxCd,WAAA,CAAYe,kBAAkB,GAAG1B,IAAA,CAAK0B,kBAAkB;EAExD,IAAAC,sBAAc,EAAE;IACdhB,WAAA,CAAYiB,WAAW;EACzB;EAEA;EACA,IAAAC,gBAAQ,EAAE;IACR,OAAO,MAAMlB,WAAA,CAAYmB,WAAW;IACtC;EACA,GAAG,EAAE;EAEL,IAAIf,cAAA,GAAiB,IAAAgB,kBAAU,EAAGf,IAAA;IAChCL,WAAA,CAAYM,WAAW,GAAGD,IAAA;EAC5B,GAAG,CAACL,WAAA,CAAY;EAChB,IAAIqB,cAAA,GAAiB,IAAAD,kBAAU,EAAE;IAC/BpB,WAAA,CAAYqB,cAAc;IAC1BtB,YAAA,CAAa;EACf,GAAG,CAACC,WAAA,CAAY;EAChB,IAAIsB,YAAA,GAAe,IAAAF,kBAAU,EAAE;IAC7BpB,WAAA,CAAYsB,YAAY;IACxBvB,YAAA,CAAa;EACf,GAAG,CAACC,WAAA,CAAY;EAEhB,IAAIuB,KAAA,GAAQ,IAAAtB,cAAM,EAAE,OAAO;iBACzBD,WAAA;kBACAV,YAAA;oBACAc,cAAA;iBACAX,WAAA;iBACAG,WAAA;iBACAE,WAAA;oBACAuB,cAAA;kBACAC;EACF,IAAI,CACFtB,WAAA,EACAV,YAAA,EACAc,cAAA,EACAX,WAAA,EACAG,WAAA,EACAE,WAAA,EACAuB,cAAA,EACAC,YAAA,CACD;EAED,OAAOC,KAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}