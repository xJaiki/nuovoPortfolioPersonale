{"ast":null,"code":"// src/use-menu.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useSelectableList } from \"@react-aria/selection\";\nvar menuData = /* @__PURE__ */new WeakMap();\nfunction useMenu(props, state, ref) {\n  let {\n    shouldFocusWrap = true,\n    onKeyDown,\n    onKeyUp,\n    ...otherProps\n  } = props;\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) {\n    console.warn(\"An aria-label or aria-labelledby prop is required for accessibility.\");\n  }\n  let domProps = filterDOMProps(props, {\n    labelable: true\n  });\n  let {\n    listProps\n  } = useSelectableList({\n    ...otherProps,\n    ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    shouldFocusWrap,\n    linkBehavior: \"override\"\n  });\n  menuData.set(state, {\n    onClose: props.onClose,\n    onAction: props.onAction\n  });\n  return {\n    menuProps: mergeProps(domProps, {\n      onKeyDown,\n      onKeyUp\n    }, {\n      role: \"menu\",\n      ...listProps,\n      onKeyDown: event => {\n        if (event.key !== \"Escape\") {\n          if (listProps.onKeyDown) {\n            listProps.onKeyDown(event);\n          }\n        }\n      }\n    })\n  };\n}\nexport { menuData, useMenu };","map":{"version":3,"names":["filterDOMProps","mergeProps","useSelectableList","menuData","WeakMap","useMenu","props","state","ref","shouldFocusWrap","onKeyDown","onKeyUp","otherProps","console","warn","domProps","labelable","listProps","selectionManager","collection","disabledKeys","linkBehavior","set","onClose","onAction","menuProps","role","event","key"],"sources":["/Users/mario/Documents/Development/portfolio/node_modules/@nextui-org/use-aria-menu/dist/chunk-PH3KUROQ.mjs"],"sourcesContent":["// src/use-menu.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useSelectableList } from \"@react-aria/selection\";\nvar menuData = /* @__PURE__ */ new WeakMap();\nfunction useMenu(props, state, ref) {\n  let { shouldFocusWrap = true, onKeyDown, onKeyUp, ...otherProps } = props;\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) {\n    console.warn(\"An aria-label or aria-labelledby prop is required for accessibility.\");\n  }\n  let domProps = filterDOMProps(props, { labelable: true });\n  let { listProps } = useSelectableList({\n    ...otherProps,\n    ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    shouldFocusWrap,\n    linkBehavior: \"override\"\n  });\n  menuData.set(state, {\n    onClose: props.onClose,\n    onAction: props.onAction\n  });\n  return {\n    menuProps: mergeProps(\n      domProps,\n      { onKeyDown, onKeyUp },\n      {\n        role: \"menu\",\n        ...listProps,\n        onKeyDown: (event) => {\n          if (event.key !== \"Escape\") {\n            if (listProps.onKeyDown) {\n              listProps.onKeyDown(event);\n            }\n          }\n        }\n      }\n    )\n  };\n}\n\nexport {\n  menuData,\n  useMenu\n};\n"],"mappings":"AAAA;AACA,SAASA,cAAc,EAAEC,UAAU,QAAQ,mBAAmB;AAC9D,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,IAAIC,QAAQ,GAAG,eAAgB,IAAIC,OAAO,CAAC,CAAC;AAC5C,SAASC,OAAOA,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAClC,IAAI;IAAEC,eAAe,GAAG,IAAI;IAAEC,SAAS;IAAEC,OAAO;IAAE,GAAGC;EAAW,CAAC,GAAGN,KAAK;EACzE,IAAI,CAACA,KAAK,CAAC,YAAY,CAAC,IAAI,CAACA,KAAK,CAAC,iBAAiB,CAAC,EAAE;IACrDO,OAAO,CAACC,IAAI,CAAC,sEAAsE,CAAC;EACtF;EACA,IAAIC,QAAQ,GAAGf,cAAc,CAACM,KAAK,EAAE;IAAEU,SAAS,EAAE;EAAK,CAAC,CAAC;EACzD,IAAI;IAAEC;EAAU,CAAC,GAAGf,iBAAiB,CAAC;IACpC,GAAGU,UAAU;IACbJ,GAAG;IACHU,gBAAgB,EAAEX,KAAK,CAACW,gBAAgB;IACxCC,UAAU,EAAEZ,KAAK,CAACY,UAAU;IAC5BC,YAAY,EAAEb,KAAK,CAACa,YAAY;IAChCX,eAAe;IACfY,YAAY,EAAE;EAChB,CAAC,CAAC;EACFlB,QAAQ,CAACmB,GAAG,CAACf,KAAK,EAAE;IAClBgB,OAAO,EAAEjB,KAAK,CAACiB,OAAO;IACtBC,QAAQ,EAAElB,KAAK,CAACkB;EAClB,CAAC,CAAC;EACF,OAAO;IACLC,SAAS,EAAExB,UAAU,CACnBc,QAAQ,EACR;MAAEL,SAAS;MAAEC;IAAQ,CAAC,EACtB;MACEe,IAAI,EAAE,MAAM;MACZ,GAAGT,SAAS;MACZP,SAAS,EAAGiB,KAAK,IAAK;QACpB,IAAIA,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;UAC1B,IAAIX,SAAS,CAACP,SAAS,EAAE;YACvBO,SAAS,CAACP,SAAS,CAACiB,KAAK,CAAC;UAC5B;QACF;MACF;IACF,CACF;EACF,CAAC;AACH;AAEA,SACExB,QAAQ,EACRE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}