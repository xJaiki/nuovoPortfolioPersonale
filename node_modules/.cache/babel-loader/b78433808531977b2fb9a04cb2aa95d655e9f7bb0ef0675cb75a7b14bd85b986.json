{"ast":null,"code":"\"use client\";\n\nimport { useButtonGroupContext } from \"./chunk-BOMWXXSL.mjs\";\n\n// src/use-button.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { dataAttr } from \"@nextui-org/shared-utils\";\nimport { useCallback } from \"react\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { button } from \"@nextui-org/theme\";\nimport { isValidElement, cloneElement, useMemo } from \"react\";\nimport { useAriaButton } from \"@nextui-org/use-aria-button\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useRipple } from \"@nextui-org/ripple\";\nfunction useButton(props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n  const groupContext = useButtonGroupContext();\n  const globalContext = useProviderContext();\n  const isInGroup = !!groupContext;\n  const {\n    ref,\n    as,\n    children,\n    startContent: startContentProp,\n    endContent: endContentProp,\n    autoFocus,\n    className,\n    spinner,\n    isLoading = false,\n    disableRipple: disableRippleProp = false,\n    fullWidth = (_a = groupContext == null ? void 0 : groupContext.fullWidth) != null ? _a : false,\n    radius = groupContext == null ? void 0 : groupContext.radius,\n    size = (_b = groupContext == null ? void 0 : groupContext.size) != null ? _b : \"md\",\n    color = (_c = groupContext == null ? void 0 : groupContext.color) != null ? _c : \"default\",\n    variant = (_d = groupContext == null ? void 0 : groupContext.variant) != null ? _d : \"solid\",\n    disableAnimation = (_f = (_e = groupContext == null ? void 0 : groupContext.disableAnimation) != null ? _e : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _f : false,\n    isDisabled: isDisabledProp = (_g = groupContext == null ? void 0 : groupContext.isDisabled) != null ? _g : false,\n    isIconOnly = (_h = groupContext == null ? void 0 : groupContext.isIconOnly) != null ? _h : false,\n    spinnerPlacement = \"start\",\n    onPress,\n    onClick,\n    ...otherProps\n  } = props;\n  const Component = as || \"button\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const disableRipple = (_i = disableRippleProp || (globalContext == null ? void 0 : globalContext.disableRipple)) != null ? _i : disableAnimation;\n  const {\n    isFocusVisible,\n    isFocused,\n    focusProps\n  } = useFocusRing({\n    autoFocus\n  });\n  const isDisabled = isDisabledProp || isLoading;\n  const styles = useMemo(() => button({\n    size,\n    color,\n    variant,\n    radius,\n    fullWidth,\n    isDisabled,\n    isInGroup,\n    disableAnimation,\n    isIconOnly,\n    className\n  }), [size, color, variant, radius, fullWidth, isDisabled, isInGroup, isIconOnly, disableAnimation, className]);\n  const {\n    onClick: onRippleClickHandler,\n    onClear: onClearRipple,\n    ripples\n  } = useRipple();\n  const handleClick = useCallback(e => {\n    if (disableRipple || isDisabled || disableAnimation) return;\n    domRef.current && onRippleClickHandler(e);\n  }, [disableRipple, isDisabled, disableAnimation, domRef, onRippleClickHandler]);\n  const {\n    buttonProps: ariaButtonProps,\n    isPressed\n  } = useAriaButton({\n    elementType: as,\n    isDisabled,\n    onPress,\n    onClick: chain(onClick, handleClick),\n    ...otherProps\n  }, domRef);\n  const {\n    isHovered,\n    hoverProps\n  } = useHover({\n    isDisabled\n  });\n  const getButtonProps = useCallback((props2 = {}) => ({\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-pressed\": dataAttr(isPressed),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    \"data-hover\": dataAttr(isHovered),\n    \"data-loading\": dataAttr(isLoading),\n    ...mergeProps(ariaButtonProps, focusProps, hoverProps, filterDOMProps(otherProps, {\n      enabled: shouldFilterDOMProps\n    }), filterDOMProps(props2))\n  }), [isLoading, isDisabled, isFocused, isPressed, shouldFilterDOMProps, isFocusVisible, isHovered, ariaButtonProps, focusProps, hoverProps, otherProps]);\n  const getIconClone = icon => isValidElement(icon) ? cloneElement(icon, {\n    \"aria-hidden\": true,\n    focusable: false,\n    tabIndex: -1\n  }) : null;\n  const startContent = getIconClone(startContentProp);\n  const endContent = getIconClone(endContentProp);\n  const spinnerSize = useMemo(() => {\n    const buttonSpinnerSizeMap = {\n      sm: \"sm\",\n      md: \"sm\",\n      lg: \"md\"\n    };\n    return buttonSpinnerSizeMap[size];\n  }, [size]);\n  const getRippleProps = useCallback(() => ({\n    ripples,\n    onClear: onClearRipple\n  }), [ripples, onClearRipple]);\n  return {\n    Component,\n    children,\n    domRef,\n    spinner,\n    styles,\n    startContent,\n    endContent,\n    isLoading,\n    spinnerPlacement,\n    spinnerSize,\n    disableRipple,\n    getButtonProps,\n    getRippleProps,\n    isIconOnly\n  };\n}\nexport { useButton };","map":{"version":3,"names":["useButtonGroupContext","useProviderContext","dataAttr","useCallback","useFocusRing","chain","mergeProps","useDOMRef","filterDOMProps","button","isValidElement","cloneElement","useMemo","useAriaButton","useHover","useRipple","useButton","props","_a","_b","_c","_d","_e","_f","_g","_h","_i","groupContext","globalContext","isInGroup","ref","as","children","startContent","startContentProp","endContent","endContentProp","autoFocus","className","spinner","isLoading","disableRipple","disableRippleProp","fullWidth","radius","size","color","variant","disableAnimation","isDisabled","isDisabledProp","isIconOnly","spinnerPlacement","onPress","onClick","otherProps","Component","shouldFilterDOMProps","domRef","isFocusVisible","isFocused","focusProps","styles","onRippleClickHandler","onClear","onClearRipple","ripples","handleClick","e","current","buttonProps","ariaButtonProps","isPressed","elementType","isHovered","hoverProps","getButtonProps","props2","enabled","getIconClone","icon","focusable","tabIndex","spinnerSize","buttonSpinnerSizeMap","sm","md","lg","getRippleProps"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@nextui-org/button/dist/chunk-P5GIOWF5.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useButtonGroupContext\n} from \"./chunk-BOMWXXSL.mjs\";\n\n// src/use-button.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { dataAttr } from \"@nextui-org/shared-utils\";\nimport { useCallback } from \"react\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { button } from \"@nextui-org/theme\";\nimport { isValidElement, cloneElement, useMemo } from \"react\";\nimport { useAriaButton } from \"@nextui-org/use-aria-button\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useRipple } from \"@nextui-org/ripple\";\nfunction useButton(props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n  const groupContext = useButtonGroupContext();\n  const globalContext = useProviderContext();\n  const isInGroup = !!groupContext;\n  const {\n    ref,\n    as,\n    children,\n    startContent: startContentProp,\n    endContent: endContentProp,\n    autoFocus,\n    className,\n    spinner,\n    isLoading = false,\n    disableRipple: disableRippleProp = false,\n    fullWidth = (_a = groupContext == null ? void 0 : groupContext.fullWidth) != null ? _a : false,\n    radius = groupContext == null ? void 0 : groupContext.radius,\n    size = (_b = groupContext == null ? void 0 : groupContext.size) != null ? _b : \"md\",\n    color = (_c = groupContext == null ? void 0 : groupContext.color) != null ? _c : \"default\",\n    variant = (_d = groupContext == null ? void 0 : groupContext.variant) != null ? _d : \"solid\",\n    disableAnimation = (_f = (_e = groupContext == null ? void 0 : groupContext.disableAnimation) != null ? _e : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _f : false,\n    isDisabled: isDisabledProp = (_g = groupContext == null ? void 0 : groupContext.isDisabled) != null ? _g : false,\n    isIconOnly = (_h = groupContext == null ? void 0 : groupContext.isIconOnly) != null ? _h : false,\n    spinnerPlacement = \"start\",\n    onPress,\n    onClick,\n    ...otherProps\n  } = props;\n  const Component = as || \"button\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const disableRipple = (_i = disableRippleProp || (globalContext == null ? void 0 : globalContext.disableRipple)) != null ? _i : disableAnimation;\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing({\n    autoFocus\n  });\n  const isDisabled = isDisabledProp || isLoading;\n  const styles = useMemo(\n    () => button({\n      size,\n      color,\n      variant,\n      radius,\n      fullWidth,\n      isDisabled,\n      isInGroup,\n      disableAnimation,\n      isIconOnly,\n      className\n    }),\n    [\n      size,\n      color,\n      variant,\n      radius,\n      fullWidth,\n      isDisabled,\n      isInGroup,\n      isIconOnly,\n      disableAnimation,\n      className\n    ]\n  );\n  const { onClick: onRippleClickHandler, onClear: onClearRipple, ripples } = useRipple();\n  const handleClick = useCallback(\n    (e) => {\n      if (disableRipple || isDisabled || disableAnimation)\n        return;\n      domRef.current && onRippleClickHandler(e);\n    },\n    [disableRipple, isDisabled, disableAnimation, domRef, onRippleClickHandler]\n  );\n  const { buttonProps: ariaButtonProps, isPressed } = useAriaButton(\n    {\n      elementType: as,\n      isDisabled,\n      onPress,\n      onClick: chain(onClick, handleClick),\n      ...otherProps\n    },\n    domRef\n  );\n  const { isHovered, hoverProps } = useHover({ isDisabled });\n  const getButtonProps = useCallback(\n    (props2 = {}) => ({\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-pressed\": dataAttr(isPressed),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-loading\": dataAttr(isLoading),\n      ...mergeProps(\n        ariaButtonProps,\n        focusProps,\n        hoverProps,\n        filterDOMProps(otherProps, {\n          enabled: shouldFilterDOMProps\n        }),\n        filterDOMProps(props2)\n      )\n    }),\n    [\n      isLoading,\n      isDisabled,\n      isFocused,\n      isPressed,\n      shouldFilterDOMProps,\n      isFocusVisible,\n      isHovered,\n      ariaButtonProps,\n      focusProps,\n      hoverProps,\n      otherProps\n    ]\n  );\n  const getIconClone = (icon) => isValidElement(icon) ? cloneElement(icon, {\n    \"aria-hidden\": true,\n    focusable: false,\n    tabIndex: -1\n  }) : null;\n  const startContent = getIconClone(startContentProp);\n  const endContent = getIconClone(endContentProp);\n  const spinnerSize = useMemo(() => {\n    const buttonSpinnerSizeMap = {\n      sm: \"sm\",\n      md: \"sm\",\n      lg: \"md\"\n    };\n    return buttonSpinnerSizeMap[size];\n  }, [size]);\n  const getRippleProps = useCallback(\n    () => ({ ripples, onClear: onClearRipple }),\n    [ripples, onClearRipple]\n  );\n  return {\n    Component,\n    children,\n    domRef,\n    spinner,\n    styles,\n    startContent,\n    endContent,\n    isLoading,\n    spinnerPlacement,\n    spinnerSize,\n    disableRipple,\n    getButtonProps,\n    getRippleProps,\n    isIconOnly\n  };\n}\n\nexport {\n  useButton\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}