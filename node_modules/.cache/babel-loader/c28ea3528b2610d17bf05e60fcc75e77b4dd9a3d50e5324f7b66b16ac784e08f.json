{"ast":null,"code":"\"use client\";\n\n// src/use-badge.ts\nimport { badge } from \"@nextui-org/theme\";\nimport { mapPropsVariants, useProviderContext } from \"@nextui-org/system\";\nimport { clsx, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nfunction useBadge(originalProps) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const [props, variantProps] = mapPropsVariants(originalProps, badge.variantKeys);\n  const {\n    as,\n    children,\n    className,\n    content,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"span\";\n  const isOneChar = useMemo(() => {\n    var _a2;\n    return ((_a2 = String(content)) == null ? void 0 : _a2.length) === 1 || (originalProps == null ? void 0 : originalProps.isOneChar);\n  }, [content, originalProps == null ? void 0 : originalProps.isOneChar]);\n  const isDot = useMemo(() => {\n    var _a2;\n    return ((_a2 = String(content)) == null ? void 0 : _a2.length) === 0;\n  }, [content]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.badge, className);\n  const slots = useMemo(() => badge({\n    ...variantProps,\n    showOutline: !!(originalProps == null ? void 0 : originalProps.disableOutline) ? !(originalProps == null ? void 0 : originalProps.disableOutline) : originalProps == null ? void 0 : originalProps.showOutline,\n    isOneChar,\n    isDot\n  }), [objectToDeps(variantProps), isOneChar, isDot]);\n  const getBadgeProps = () => {\n    return {\n      className: slots.badge({\n        class: baseStyles\n      }),\n      \"data-invisible\": originalProps.isInvisible,\n      ...otherProps\n    };\n  };\n  return {\n    Component,\n    children,\n    content,\n    slots,\n    classNames,\n    disableAnimation,\n    isInvisible: originalProps == null ? void 0 : originalProps.isInvisible,\n    getBadgeProps\n  };\n}\nexport { useBadge };","map":{"version":3,"names":["badge","mapPropsVariants","useProviderContext","clsx","objectToDeps","useMemo","useBadge","originalProps","_a","_b","globalContext","disableAnimation","props","variantProps","variantKeys","as","children","className","content","classNames","otherProps","Component","isOneChar","_a2","String","length","isDot","baseStyles","slots","showOutline","disableOutline","getBadgeProps","class","isInvisible"],"sources":["/Users/mario/Documents/Development/portfolio/node_modules/@nextui-org/badge/dist/chunk-6FKWSXYX.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-badge.ts\nimport { badge } from \"@nextui-org/theme\";\nimport { mapPropsVariants, useProviderContext } from \"@nextui-org/system\";\nimport { clsx, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nfunction useBadge(originalProps) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const [props, variantProps] = mapPropsVariants(originalProps, badge.variantKeys);\n  const { as, children, className, content, classNames, ...otherProps } = props;\n  const Component = as || \"span\";\n  const isOneChar = useMemo(\n    () => {\n      var _a2;\n      return ((_a2 = String(content)) == null ? void 0 : _a2.length) === 1 || (originalProps == null ? void 0 : originalProps.isOneChar);\n    },\n    [content, originalProps == null ? void 0 : originalProps.isOneChar]\n  );\n  const isDot = useMemo(() => {\n    var _a2;\n    return ((_a2 = String(content)) == null ? void 0 : _a2.length) === 0;\n  }, [content]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.badge, className);\n  const slots = useMemo(\n    () => badge({\n      ...variantProps,\n      showOutline: !!(originalProps == null ? void 0 : originalProps.disableOutline) ? !(originalProps == null ? void 0 : originalProps.disableOutline) : originalProps == null ? void 0 : originalProps.showOutline,\n      isOneChar,\n      isDot\n    }),\n    [objectToDeps(variantProps), isOneChar, isDot]\n  );\n  const getBadgeProps = () => {\n    return {\n      className: slots.badge({ class: baseStyles }),\n      \"data-invisible\": originalProps.isInvisible,\n      ...otherProps\n    };\n  };\n  return {\n    Component,\n    children,\n    content,\n    slots,\n    classNames,\n    disableAnimation,\n    isInvisible: originalProps == null ? void 0 : originalProps.isInvisible,\n    getBadgeProps\n  };\n}\n\nexport {\n  useBadge\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}