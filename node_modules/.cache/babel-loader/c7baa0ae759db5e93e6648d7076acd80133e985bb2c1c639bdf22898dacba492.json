{"ast":null,"code":"import { gridMap as $1af922eb41e03c8f$export$e6235c0d09b995d0 } from \"./utils.mjs\";\nimport { chain as $kA5if$chain } from \"@react-aria/utils\";\nimport { useSelectableItem as $kA5if$useSelectableItem } from \"@react-aria/selection\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  var _node_props, _node_props1;\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    actions: actions\n  } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);\n  let onRowAction = actions.onRowAction ? () => actions.onRowAction(node.key) : onAction;\n  let {\n    itemProps: itemProps,\n    ...states\n  } = (0, $kA5if$useSelectableItem)({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onRowAction || (node === null || node === void 0 ? void 0 : (_node_props = node.props) === null || _node_props === void 0 ? void 0 : _node_props.onAction) ? (0, $kA5if$chain)(node === null || node === void 0 ? void 0 : (_node_props1 = node.props) === null || _node_props1 === void 0 ? void 0 : _node_props1.onAction, onRowAction) : undefined,\n    isDisabled: state.collection.size === 0\n  });\n  let isSelected = state.selectionManager.isSelected(node.key);\n  let rowProps = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    'aria-disabled': states.isDisabled || undefined,\n    ...itemProps\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  return {\n    rowProps: rowProps,\n    ...states\n  };\n}\nexport { $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow };","map":{"version":3,"names":["$4159a7a9cbb0cc18$export$96357d5a73f686fa","props","state","ref","_node_props","_node_props1","node","isVirtualized","shouldSelectOnPressUp","onAction","actions","$1af922eb41e03c8f$export$e6235c0d09b995d0","get","onRowAction","key","itemProps","states","$kA5if$useSelectableItem","selectionManager","$kA5if$chain","undefined","isDisabled","collection","size","isSelected","rowProps","role","selectionMode","index"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/useGridRow.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain} from '@react-aria/utils';\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {RefObject} from 'react';\nimport {SelectableItemStates, useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: GridNode<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria extends SelectableItemStates {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<FocusableElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions} = gridMap.get(state);\n  let onRowAction = actions.onRowAction ? () => actions.onRowAction(node.key) : onAction;\n  let {itemProps, ...states} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction || node?.props?.onAction ? chain(node?.props?.onAction, onRowAction) : undefined,\n    isDisabled: state.collection.size === 0\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: DOMAttributes = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    'aria-disabled': states.isDisabled || undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    ...states\n  };\n}\n"],"mappings":";;;;AAAA;;;;;;;;;;;;AA+CO,SAASA,0CAAsEC,KAAsB,EAAEC,KAAQ,EAAEC,GAAgC;MAgB3HC,WAAA,EAA8BC,YAAA;EAfzD,IAAI;IAAAC,IAAA,EACFA,IAAI;IAAAC,aAAA,EACJA,aAAa;IAAAC,qBAAA,EACbA,qBAAqB;IAAAC,QAAA,EACrBA;EAAQ,CACT,GAAGR,KAAA;EAEJ,IAAI;IAAAS,OAAA,EAACA;EAAO,CAAC,GAAG,IAAAC,yCAAM,EAAEC,GAAG,CAACV,KAAA;EAC5B,IAAIW,WAAA,GAAcH,OAAA,CAAQG,WAAW,GAAG,MAAMH,OAAA,CAAQG,WAAW,CAACP,IAAA,CAAKQ,GAAG,IAAIL,QAAA;EAC9E,IAAI;IAAAM,SAAA,EAACA,SAAS;IAAE,GAAGC;EAAA,CAAO,GAAG,IAAAC,wBAAgB,EAAE;IAC7CC,gBAAA,EAAkBhB,KAAA,CAAMgB,gBAAgB;IACxCJ,GAAA,EAAKR,IAAA,CAAKQ,GAAG;SACbX,GAAA;mBACAI,aAAA;2BACAC,qBAAA;IACAC,QAAA,EAAUI,WAAA,KAAeP,IAAA,aAAAA,IAAA,wBAAAF,WAAA,GAAAE,IAAA,CAAML,KAAK,cAAXG,WAAA,uBAAAA,WAAA,CAAaK,QAAQ,IAAG,IAAAU,YAAI,EAAEb,IAAA,aAAAA,IAAA,wBAAAD,YAAA,GAAAC,IAAA,CAAML,KAAK,cAAXI,YAAA,uBAAAA,YAAA,CAAaI,QAAQ,EAAEI,WAAA,IAAeO,SAAA;IAC7FC,UAAA,EAAYnB,KAAA,CAAMoB,UAAU,CAACC,IAAI,KAAK;EACxC;EAEA,IAAIC,UAAA,GAAatB,KAAA,CAAMgB,gBAAgB,CAACM,UAAU,CAAClB,IAAA,CAAKQ,GAAG;EAE3D,IAAIW,QAAA,GAA0B;IAC5BC,IAAA,EAAM;IACN,iBAAiBxB,KAAA,CAAMgB,gBAAgB,CAACS,aAAa,KAAK,SAASH,UAAA,GAAaJ,SAAA;IAChF,iBAAiBJ,MAAA,CAAOK,UAAU,IAAID,SAAA;IACtC,GAAGL;EACL;EAEA,IAAIR,aAAA,EACFkB,QAAQ,CAAC,gBAAgB,GAAGnB,IAAA,CAAKsB,KAAK,GAAG,GAAG;EAG9C,OAAO;cACLH,QAAA;IACA,GAAGT;EACL;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}