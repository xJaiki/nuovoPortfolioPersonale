{"ast":null,"code":"\"use client\";\n\n// src/use-checkbox-group.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { useCallback, useMemo } from \"react\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { checkboxGroup } from \"@nextui-org/theme\";\nimport { useCheckboxGroup as useReactAriaCheckboxGroup } from \"@react-aria/checkbox\";\nimport { useCheckboxGroupState } from \"@react-stately/checkbox\";\nimport { filterDOMProps, useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, safeAriaLabel } from \"@nextui-org/shared-utils\";\nfunction useCheckboxGroup(props) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const {\n    as,\n    ref,\n    classNames,\n    children,\n    label,\n    radius,\n    value,\n    name,\n    defaultValue,\n    isInvalid: isInvalidProp,\n    validationState,\n    size = \"md\",\n    color = \"primary\",\n    orientation = \"vertical\",\n    lineThrough = false,\n    isDisabled = false,\n    validationBehavior = (_a = globalContext == null ? void 0 : globalContext.validationBehavior) != null ? _a : \"aria\",\n    disableAnimation = (_b = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false,\n    isReadOnly,\n    isRequired,\n    onValueChange,\n    description,\n    errorMessage,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const checkboxGroupProps = useMemo(() => {\n    return {\n      ...otherProps,\n      value,\n      name,\n      \"aria-label\": safeAriaLabel(otherProps[\"aria-label\"], label),\n      defaultValue,\n      isRequired,\n      isReadOnly,\n      orientation,\n      validationBehavior,\n      isInvalid: validationState === \"invalid\" || isInvalidProp,\n      onChange: chain(props.onChange, onValueChange)\n    };\n  }, [value, name, label, defaultValue, isRequired, isReadOnly, orientation, onValueChange, isInvalidProp, validationState, validationBehavior, otherProps[\"aria-label\"], otherProps]);\n  const groupState = useCheckboxGroupState(checkboxGroupProps);\n  const {\n    labelProps,\n    groupProps,\n    descriptionProps,\n    errorMessageProps,\n    validationErrors,\n    validationDetails\n  } = useReactAriaCheckboxGroup(checkboxGroupProps, groupState);\n  const context = useMemo(() => ({\n    size,\n    color,\n    radius,\n    lineThrough,\n    isInvalid: groupState.isInvalid,\n    isDisabled,\n    disableAnimation,\n    validationBehavior,\n    groupState\n  }), [size, color, radius, lineThrough, isDisabled, disableAnimation, validationBehavior, groupState.value, groupState.isDisabled, groupState.isReadOnly, groupState.isInvalid, groupState.isSelected]);\n  const slots = useMemo(() => checkboxGroup({\n    isRequired,\n    isInvalid: groupState.isInvalid,\n    disableAnimation\n  }), [isRequired, groupState.isInvalid,, disableAnimation]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getGroupProps = useCallback(() => {\n    return {\n      ref: domRef,\n      className: slots.base({\n        class: baseStyles\n      }),\n      ...mergeProps(groupProps, filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }))\n    };\n  }, [slots, domRef, baseStyles, groupProps, otherProps]);\n  const getLabelProps = useCallback(() => {\n    return {\n      className: slots.label({\n        class: classNames == null ? void 0 : classNames.label\n      }),\n      ...labelProps\n    };\n  }, [slots, labelProps, classNames == null ? void 0 : classNames.label]);\n  const getWrapperProps = useCallback(() => {\n    return {\n      className: slots.wrapper({\n        class: classNames == null ? void 0 : classNames.wrapper\n      }),\n      role: \"presentation\",\n      \"data-orientation\": orientation\n    };\n  }, [slots, orientation, classNames == null ? void 0 : classNames.wrapper]);\n  const getDescriptionProps = useCallback((props2 = {}) => {\n    return {\n      ...props2,\n      ...descriptionProps,\n      className: slots.description({\n        class: clsx(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className)\n      })\n    };\n  }, [slots, descriptionProps, classNames == null ? void 0 : classNames.description]);\n  const getErrorMessageProps = useCallback((props2 = {}) => {\n    return {\n      ...props2,\n      ...errorMessageProps,\n      className: slots.errorMessage({\n        class: clsx(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className)\n      })\n    };\n  }, [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]);\n  return {\n    Component,\n    children,\n    label,\n    context,\n    description,\n    isInvalid: groupState.isInvalid,\n    errorMessage: typeof errorMessage === \"function\" ? errorMessage({\n      isInvalid: groupState.isInvalid,\n      validationErrors,\n      validationDetails\n    }) : errorMessage || (validationErrors == null ? void 0 : validationErrors.join(\" \")),\n    getGroupProps,\n    getLabelProps,\n    getWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps\n  };\n}\nexport { useCheckboxGroup };","map":{"version":3,"names":["useProviderContext","useCallback","useMemo","chain","mergeProps","checkboxGroup","useCheckboxGroup","useReactAriaCheckboxGroup","useCheckboxGroupState","filterDOMProps","useDOMRef","clsx","safeAriaLabel","props","_a","_b","globalContext","as","ref","classNames","children","label","radius","value","name","defaultValue","isInvalid","isInvalidProp","validationState","size","color","orientation","lineThrough","isDisabled","validationBehavior","disableAnimation","isReadOnly","isRequired","onValueChange","description","errorMessage","className","otherProps","Component","shouldFilterDOMProps","domRef","checkboxGroupProps","onChange","groupState","labelProps","groupProps","descriptionProps","errorMessageProps","validationErrors","validationDetails","context","isSelected","slots","baseStyles","base","getGroupProps","class","enabled","getLabelProps","getWrapperProps","wrapper","role","getDescriptionProps","props2","getErrorMessageProps","join"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@nextui-org/checkbox/dist/chunk-EVFZI3P4.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-checkbox-group.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { useCallback, useMemo } from \"react\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { checkboxGroup } from \"@nextui-org/theme\";\nimport { useCheckboxGroup as useReactAriaCheckboxGroup } from \"@react-aria/checkbox\";\nimport { useCheckboxGroupState } from \"@react-stately/checkbox\";\nimport { filterDOMProps, useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, safeAriaLabel } from \"@nextui-org/shared-utils\";\nfunction useCheckboxGroup(props) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const {\n    as,\n    ref,\n    classNames,\n    children,\n    label,\n    radius,\n    value,\n    name,\n    defaultValue,\n    isInvalid: isInvalidProp,\n    validationState,\n    size = \"md\",\n    color = \"primary\",\n    orientation = \"vertical\",\n    lineThrough = false,\n    isDisabled = false,\n    validationBehavior = (_a = globalContext == null ? void 0 : globalContext.validationBehavior) != null ? _a : \"aria\",\n    disableAnimation = (_b = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false,\n    isReadOnly,\n    isRequired,\n    onValueChange,\n    description,\n    errorMessage,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const checkboxGroupProps = useMemo(() => {\n    return {\n      ...otherProps,\n      value,\n      name,\n      \"aria-label\": safeAriaLabel(otherProps[\"aria-label\"], label),\n      defaultValue,\n      isRequired,\n      isReadOnly,\n      orientation,\n      validationBehavior,\n      isInvalid: validationState === \"invalid\" || isInvalidProp,\n      onChange: chain(props.onChange, onValueChange)\n    };\n  }, [\n    value,\n    name,\n    label,\n    defaultValue,\n    isRequired,\n    isReadOnly,\n    orientation,\n    onValueChange,\n    isInvalidProp,\n    validationState,\n    validationBehavior,\n    otherProps[\"aria-label\"],\n    otherProps\n  ]);\n  const groupState = useCheckboxGroupState(checkboxGroupProps);\n  const {\n    labelProps,\n    groupProps,\n    descriptionProps,\n    errorMessageProps,\n    validationErrors,\n    validationDetails\n  } = useReactAriaCheckboxGroup(checkboxGroupProps, groupState);\n  const context = useMemo(\n    () => ({\n      size,\n      color,\n      radius,\n      lineThrough,\n      isInvalid: groupState.isInvalid,\n      isDisabled,\n      disableAnimation,\n      validationBehavior,\n      groupState\n    }),\n    [\n      size,\n      color,\n      radius,\n      lineThrough,\n      isDisabled,\n      disableAnimation,\n      validationBehavior,\n      groupState.value,\n      groupState.isDisabled,\n      groupState.isReadOnly,\n      groupState.isInvalid,\n      groupState.isSelected\n    ]\n  );\n  const slots = useMemo(\n    () => checkboxGroup({ isRequired, isInvalid: groupState.isInvalid, disableAnimation }),\n    [isRequired, groupState.isInvalid, , disableAnimation]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getGroupProps = useCallback(() => {\n    return {\n      ref: domRef,\n      className: slots.base({ class: baseStyles }),\n      ...mergeProps(\n        groupProps,\n        filterDOMProps(otherProps, {\n          enabled: shouldFilterDOMProps\n        })\n      )\n    };\n  }, [slots, domRef, baseStyles, groupProps, otherProps]);\n  const getLabelProps = useCallback(() => {\n    return {\n      className: slots.label({ class: classNames == null ? void 0 : classNames.label }),\n      ...labelProps\n    };\n  }, [slots, labelProps, classNames == null ? void 0 : classNames.label]);\n  const getWrapperProps = useCallback(() => {\n    return {\n      className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }),\n      role: \"presentation\",\n      \"data-orientation\": orientation\n    };\n  }, [slots, orientation, classNames == null ? void 0 : classNames.wrapper]);\n  const getDescriptionProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        ...descriptionProps,\n        className: slots.description({ class: clsx(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, descriptionProps, classNames == null ? void 0 : classNames.description]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        ...errorMessageProps,\n        className: slots.errorMessage({ class: clsx(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]\n  );\n  return {\n    Component,\n    children,\n    label,\n    context,\n    description,\n    isInvalid: groupState.isInvalid,\n    errorMessage: typeof errorMessage === \"function\" ? errorMessage({ isInvalid: groupState.isInvalid, validationErrors, validationDetails }) : errorMessage || (validationErrors == null ? void 0 : validationErrors.join(\" \")),\n    getGroupProps,\n    getLabelProps,\n    getWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps\n  };\n}\n\nexport {\n  useCheckboxGroup\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}