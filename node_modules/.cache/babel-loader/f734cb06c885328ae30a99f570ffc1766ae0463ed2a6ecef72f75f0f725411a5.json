{"ast":null,"code":"\"use client\";\n\n// src/use-circular-progress.ts\nimport { mapPropsVariants, useProviderContext } from \"@nextui-org/system\";\nimport { circularProgress } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clampPercentage, clsx, dataAttr, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMemo, useCallback } from \"react\";\nimport { useIsMounted } from \"@nextui-org/use-is-mounted\";\nimport { useProgressBar as useAriaProgress } from \"@react-aria/progress\";\nfunction useCircularProgress(originalProps) {\n  var _a, _b, _c;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, circularProgress.variantKeys);\n  const {\n    ref,\n    as,\n    id,\n    className,\n    classNames,\n    label,\n    valueLabel,\n    value = void 0,\n    minValue = 0,\n    maxValue = 100,\n    strokeWidth: strokeWidthProp,\n    showValueLabel = false,\n    formatOptions = {\n      style: \"percent\"\n    },\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const [, isMounted] = useIsMounted({\n    rerender: true,\n    delay: 100\n  });\n  const isIndeterminate = ((_a = originalProps.isIndeterminate) != null ? _a : true) && value === void 0;\n  const disableAnimation = (_c = (_b = originalProps.disableAnimation) != null ? _b : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _c : false;\n  const {\n    progressBarProps,\n    labelProps\n  } = useAriaProgress({\n    id,\n    label,\n    value,\n    minValue,\n    maxValue,\n    valueLabel,\n    formatOptions,\n    isIndeterminate,\n    \"aria-labelledby\": originalProps[\"aria-labelledby\"],\n    \"aria-label\": originalProps[\"aria-label\"]\n  });\n  const slots = useMemo(() => circularProgress({\n    ...variantProps,\n    disableAnimation,\n    isIndeterminate\n  }), [objectToDeps(variantProps), disableAnimation, isIndeterminate]);\n  const selfMounted = disableAnimation ? true : isMounted;\n  const center = 16;\n  const strokeWidth = strokeWidthProp || (originalProps.size === \"sm\" ? 2 : 3);\n  const radius = 16 - strokeWidth;\n  const circumference = 2 * radius * Math.PI;\n  const percentage = useMemo(() => {\n    if (!selfMounted) {\n      return 0;\n    }\n    if (isIndeterminate) {\n      return 0.25;\n    }\n    return value ? clampPercentage((value - minValue) / (maxValue - minValue), 1) : 0;\n  }, [selfMounted, value, minValue, maxValue, isIndeterminate]);\n  const offset = circumference - percentage * circumference;\n  const getProgressBarProps = useCallback((props2 = {}) => ({\n    ref: domRef,\n    \"data-indeterminate\": dataAttr(isIndeterminate),\n    \"data-disabled\": dataAttr(originalProps.isDisabled),\n    className: slots.base({\n      class: baseStyles\n    }),\n    ...mergeProps(progressBarProps, otherProps, props2)\n  }), [domRef, slots, isIndeterminate, originalProps.isDisabled, baseStyles, progressBarProps, otherProps]);\n  const getLabelProps = useCallback((props2 = {}) => ({\n    className: slots.label({\n      class: classNames == null ? void 0 : classNames.label\n    }),\n    ...mergeProps(labelProps, props2)\n  }), [slots, classNames, labelProps]);\n  const getSvgProps = useCallback((props2 = {}) => ({\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    strokeWidth,\n    className: slots.svg({\n      class: classNames == null ? void 0 : classNames.svg\n    }),\n    ...props2\n  }), [strokeWidth, slots, classNames]);\n  const getIndicatorProps = useCallback((props2 = {}) => ({\n    cx: center,\n    cy: center,\n    r: radius,\n    role: \"presentation\",\n    strokeDasharray: `${circumference} ${circumference}`,\n    strokeDashoffset: offset,\n    transform: \"rotate(-90 16 16)\",\n    strokeLinecap: \"round\",\n    className: slots.indicator({\n      class: classNames == null ? void 0 : classNames.indicator\n    }),\n    ...props2\n  }), [slots, classNames, offset, circumference, radius]);\n  const getTrackProps = useCallback((props2 = {}) => ({\n    cx: center,\n    cy: center,\n    r: radius,\n    role: \"presentation\",\n    strokeDasharray: `${circumference} ${circumference}`,\n    strokeDashoffset: 0,\n    transform: \"rotate(-90 16 16)\",\n    strokeLinecap: \"round\",\n    className: slots.track({\n      class: classNames == null ? void 0 : classNames.track\n    }),\n    ...props2\n  }), [slots, classNames, circumference, radius]);\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    label,\n    showValueLabel,\n    getProgressBarProps,\n    getLabelProps,\n    getSvgProps,\n    getIndicatorProps,\n    getTrackProps\n  };\n}\nexport { useCircularProgress };","map":{"version":3,"names":["mapPropsVariants","useProviderContext","circularProgress","useDOMRef","clampPercentage","clsx","dataAttr","objectToDeps","mergeProps","useMemo","useCallback","useIsMounted","useProgressBar","useAriaProgress","useCircularProgress","originalProps","_a","_b","_c","globalContext","props","variantProps","variantKeys","ref","as","id","className","classNames","label","valueLabel","value","minValue","maxValue","strokeWidth","strokeWidthProp","showValueLabel","formatOptions","style","otherProps","Component","domRef","baseStyles","base","isMounted","rerender","delay","isIndeterminate","disableAnimation","progressBarProps","labelProps","slots","selfMounted","center","size","radius","circumference","Math","PI","percentage","offset","getProgressBarProps","props2","isDisabled","class","getLabelProps","getSvgProps","viewBox","fill","svg","getIndicatorProps","cx","cy","r","role","strokeDasharray","strokeDashoffset","transform","strokeLinecap","indicator","getTrackProps","track"],"sources":["/Users/mario/Documents/pythonmongoreact/soldini/soldini-front/node_modules/@nextui-org/progress/dist/chunk-4G6O2UHP.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-circular-progress.ts\nimport { mapPropsVariants, useProviderContext } from \"@nextui-org/system\";\nimport { circularProgress } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clampPercentage, clsx, dataAttr, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMemo, useCallback } from \"react\";\nimport { useIsMounted } from \"@nextui-org/use-is-mounted\";\nimport { useProgressBar as useAriaProgress } from \"@react-aria/progress\";\nfunction useCircularProgress(originalProps) {\n  var _a, _b, _c;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, circularProgress.variantKeys);\n  const {\n    ref,\n    as,\n    id,\n    className,\n    classNames,\n    label,\n    valueLabel,\n    value = void 0,\n    minValue = 0,\n    maxValue = 100,\n    strokeWidth: strokeWidthProp,\n    showValueLabel = false,\n    formatOptions = {\n      style: \"percent\"\n    },\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const [, isMounted] = useIsMounted({\n    rerender: true,\n    delay: 100\n  });\n  const isIndeterminate = ((_a = originalProps.isIndeterminate) != null ? _a : true) && value === void 0;\n  const disableAnimation = (_c = (_b = originalProps.disableAnimation) != null ? _b : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _c : false;\n  const { progressBarProps, labelProps } = useAriaProgress({\n    id,\n    label,\n    value,\n    minValue,\n    maxValue,\n    valueLabel,\n    formatOptions,\n    isIndeterminate,\n    \"aria-labelledby\": originalProps[\"aria-labelledby\"],\n    \"aria-label\": originalProps[\"aria-label\"]\n  });\n  const slots = useMemo(\n    () => circularProgress({\n      ...variantProps,\n      disableAnimation,\n      isIndeterminate\n    }),\n    [objectToDeps(variantProps), disableAnimation, isIndeterminate]\n  );\n  const selfMounted = disableAnimation ? true : isMounted;\n  const center = 16;\n  const strokeWidth = strokeWidthProp || (originalProps.size === \"sm\" ? 2 : 3);\n  const radius = 16 - strokeWidth;\n  const circumference = 2 * radius * Math.PI;\n  const percentage = useMemo(() => {\n    if (!selfMounted) {\n      return 0;\n    }\n    if (isIndeterminate) {\n      return 0.25;\n    }\n    return value ? clampPercentage((value - minValue) / (maxValue - minValue), 1) : 0;\n  }, [selfMounted, value, minValue, maxValue, isIndeterminate]);\n  const offset = circumference - percentage * circumference;\n  const getProgressBarProps = useCallback(\n    (props2 = {}) => ({\n      ref: domRef,\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(originalProps.isDisabled),\n      className: slots.base({ class: baseStyles }),\n      ...mergeProps(progressBarProps, otherProps, props2)\n    }),\n    [\n      domRef,\n      slots,\n      isIndeterminate,\n      originalProps.isDisabled,\n      baseStyles,\n      progressBarProps,\n      otherProps\n    ]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.label({ class: classNames == null ? void 0 : classNames.label }),\n      ...mergeProps(labelProps, props2)\n    }),\n    [slots, classNames, labelProps]\n  );\n  const getSvgProps = useCallback(\n    (props2 = {}) => ({\n      viewBox: \"0 0 32 32\",\n      fill: \"none\",\n      strokeWidth,\n      className: slots.svg({ class: classNames == null ? void 0 : classNames.svg }),\n      ...props2\n    }),\n    [strokeWidth, slots, classNames]\n  );\n  const getIndicatorProps = useCallback(\n    (props2 = {}) => ({\n      cx: center,\n      cy: center,\n      r: radius,\n      role: \"presentation\",\n      strokeDasharray: `${circumference} ${circumference}`,\n      strokeDashoffset: offset,\n      transform: \"rotate(-90 16 16)\",\n      strokeLinecap: \"round\",\n      className: slots.indicator({ class: classNames == null ? void 0 : classNames.indicator }),\n      ...props2\n    }),\n    [slots, classNames, offset, circumference, radius]\n  );\n  const getTrackProps = useCallback(\n    (props2 = {}) => ({\n      cx: center,\n      cy: center,\n      r: radius,\n      role: \"presentation\",\n      strokeDasharray: `${circumference} ${circumference}`,\n      strokeDashoffset: 0,\n      transform: \"rotate(-90 16 16)\",\n      strokeLinecap: \"round\",\n      className: slots.track({ class: classNames == null ? void 0 : classNames.track }),\n      ...props2\n    }),\n    [slots, classNames, circumference, radius]\n  );\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    label,\n    showValueLabel,\n    getProgressBarProps,\n    getLabelProps,\n    getSvgProps,\n    getIndicatorProps,\n    getTrackProps\n  };\n}\n\nexport {\n  useCircularProgress\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}